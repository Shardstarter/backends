{"version":3,"file":"static/js/8961.ec4878da.chunk.js","mappings":"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","sources":["pages/LockListPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Stack,\r\n  Typography,\r\n  Card,\r\n  Divider,\r\n  TextField,\r\n  Container,\r\n  Link,\r\n  Tabs,\r\n  Tab,\r\n  Pagination\r\n} from '@mui/material';\r\nimport { formatUnits, commify } from '@ethersproject/units';\r\nimport Page from 'components/Page';\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\r\nimport { getLiquidities } from 'redux/slices/liquidityLocks';\r\nimport { getTokens } from 'redux/slices/tokenLocks';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ py: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function LockList() {\r\n  const { hash } = useLocation();\r\n  const [mode, setMode] = useState();\r\n  const [tab, setTab] = useState(0);\r\n  const { account } = useActiveWeb3React();\r\n  const [search, setSearch] = useState('');\r\n  //Pagination part\r\n  const [page, setPage] = useState(1);\r\n  const liquidities = useSelector((state) => state.liquidityLocks.liquidities);\r\n  const liquiditiesTotalPage = useSelector((state) => state.liquidityLocks.totalPage);\r\n  const tokens = useSelector((state) => state.tokenLocks.tokens);\r\n  const tokensTotalPage = useSelector((state) => state.tokenLocks.totalPage);\r\n  const handlePageChange = (e, value) => {\r\n    setPage(value);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const network = useSelector((state) => state.network.chainId);\r\n  console.log(mode);\r\n  useEffect(() => {\r\n    setMode(hash.slice(1));\r\n  }, [hash]);\r\n\r\n  useEffect(() => {\r\n    if (mode === 'token') {\r\n      dispatch(getTokens(network, page, search, tab, account));\r\n    } else dispatch(getLiquidities(network, page, search, tab, account));\r\n  }, [account, dispatch, network, page, search, tab, mode]);\r\n\r\n  // const handleTokenAddress = async (e) => {\r\n  //   setIsParsing(true);\r\n  //   dispatch(setAddress(e.target.value));\r\n  // };\r\n\r\n  console.log('tokens:', tokens);\r\n  return (\r\n    <Page title=\"Lock List\">\r\n      <Container maxWidth=\"lg\">\r\n        <Card\r\n          sx={{\r\n            width: 1,\r\n            p: 3,\r\n            transition: 'all .3s',\r\n            cursor: 'pointer',\r\n            '&:hover': {\r\n              boxShadow: (theme) => theme.customShadows.z24\r\n            }\r\n          }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            label=\"Search by token address...\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n            <Tabs\r\n              value={tab}\r\n              onChange={(e, newValue) => setTab(newValue)}\r\n              textColor=\"secondary\"\r\n              indicatorColor=\"primary\"\r\n              aria-label=\"icon position tabs example\"\r\n              sx={{ mt: 2, align: 'right' }}\r\n            >\r\n              <Tab label=\"All\" />\r\n              <Tab label=\"My locks\" />\r\n            </Tabs>\r\n          </Stack>\r\n          <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n            <Typography fontWeight=\"bold\" sx={{ width: 0.45 }}>\r\n              Token\r\n            </Typography>\r\n            <Typography fontWeight=\"bold\" sx={{ width: 0.45 }}>\r\n              Amount\r\n            </Typography>\r\n          </Stack>\r\n          <TabPanel value={tab} index={0}>\r\n            {mode === 'token' ? (\r\n              tokens.length > 0 ? (\r\n                tokens?.map((item, index) => (\r\n                  <Stack key={index}>\r\n                    <Stack direction=\"row\" alignItems=\"center\">\r\n                      <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ width: 0.45 }}>\r\n                        <Box component=\"img\" src=\"/icons/logo.png\" sx={{ width: 50 }} />\r\n                        <Stack>\r\n                          <Typography fontSize={18}>{item.name}</Typography>\r\n                          <Typography color=\"text.secondary\">{item.symbol}</Typography>\r\n                        </Stack>\r\n                      </Stack>\r\n                      <Stack sx={{ width: 0.45 }}>\r\n                        <Typography fontSize={18}>\r\n                          {parseFloat(formatUnits(item.amount, item.decimals)).toLocaleString('en')} {item.symbol}\r\n                        </Typography>\r\n                      </Stack>\r\n                      <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                        <Link component={RouterLink} to={`/token-lock-detail/${item.token}/${item.owner}`}>\r\n                          View\r\n                        </Link>\r\n                      </Stack>\r\n                    </Stack>\r\n                    <Divider sx={{ my: 1.5 }} />\r\n                  </Stack>\r\n                ))\r\n              ) : (\r\n                <Stack alignItems=\"Center\" spacing={2}>\r\n                  <Typography variant=\"h3\">No Data</Typography>\r\n                </Stack>\r\n              )\r\n            ) : liquidities.length > 0 ? (\r\n              liquidities?.map((item, index) => (\r\n                <Stack key={index}>\r\n                  <Stack direction=\"row\" alignItems=\"center\">\r\n                    <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ width: 0.45 }}>\r\n                      <Stack direction=\"row\">\r\n                        <Box component=\"img\" src=\"/icons/logo.png\" sx={{ width: 50, zIndex: 1 }} />\r\n                        <Box component=\"img\" src=\"/icons/logo.png\" sx={{ width: 50, ml: -3 }} />\r\n                      </Stack>\r\n                      <Stack>\r\n                        <Typography fontSize={18}>\r\n                          {item.token0_name}/{item.token1_name}\r\n                        </Typography>\r\n                        <Typography color=\"text.secondary\">\r\n                          {item.token0_symbol}/{item.token1_symbol}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                    <Stack sx={{ width: 0.45 }}>\r\n                      <Typography fontSize={18}>{commify(formatUnits(item.amount, 18))}</Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                      <Link component={RouterLink} to={`/liquidity-lock-detail/${item.token}/${item.owner}`}>\r\n                        View\r\n                      </Link>\r\n                    </Stack>\r\n                  </Stack>\r\n                  <Divider sx={{ my: 1.5 }} />\r\n                </Stack>\r\n              ))\r\n            ) : (\r\n              <Stack alignItems=\"Center\" spacing={2}>\r\n                <Typography variant=\"h3\">No Data</Typography>\r\n              </Stack>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel value={tab} index={1}>\r\n            {mode === 'token' ? (\r\n              tokens.length > 0 ? (\r\n                tokens?.map((item, index) => (\r\n                  <Stack key={index}>\r\n                    <Stack direction=\"row\" alignItems=\"center\">\r\n                      <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ width: 0.45 }}>\r\n                        <Box component=\"img\" src=\"/icons/logo.png\" sx={{ width: 50 }} />\r\n                        <Stack>\r\n                          <Typography fontSize={18}>{item.name}</Typography>\r\n                          <Typography color=\"text.secondary\">{item.symbol}</Typography>\r\n                        </Stack>\r\n                      </Stack>\r\n                      <Stack sx={{ width: 0.45 }}>\r\n                        <Typography fontSize={18}>\r\n                          {parseFloat(formatUnits(item.amount, item.decimals)).toLocaleString('en')} {item.symbol}\r\n                        </Typography>\r\n                      </Stack>\r\n                      <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                        <Link component={RouterLink} to={`/token-lock-detail/${item.token}/${item.owner}`}>\r\n                          View\r\n                        </Link>\r\n                      </Stack>\r\n                    </Stack>\r\n                    <Divider sx={{ my: 1.5 }} />\r\n                  </Stack>\r\n                ))\r\n              ) : (\r\n                <Stack alignItems=\"Center\" spacing={2}>\r\n                  <Typography variant=\"h3\">No Data</Typography>\r\n                </Stack>\r\n              )\r\n            ) : liquidities.length > 0 ? (\r\n              liquidities.map((item, index) => (\r\n                <Stack key={index}>\r\n                  <Stack direction=\"row\" alignItems=\"center\">\r\n                    <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ width: 0.45 }}>\r\n                      <Stack direction=\"row\">\r\n                        <Box component=\"img\" src=\"/icons/logo.png\" sx={{ width: 50, zIndex: 1 }} />\r\n                        <Box component=\"img\" src=\"/icons/logo.png\" sx={{ width: 50, ml: -3 }} />\r\n                      </Stack>\r\n                      <Stack>\r\n                        <Typography fontSize={18}>\r\n                          {item.token0_name}/{item.token1_name}\r\n                        </Typography>\r\n                        <Typography color=\"text.secondary\">\r\n                          {item.token0_symbol}/{item.token1_symbol}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                    <Stack sx={{ width: 0.45 }}>\r\n                      <Typography fontSize={18}>{commify(formatUnits(item.amount, 18))}</Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                      <Link component={RouterLink} to={`/liquidity-lock-detail/${item.token}/${item.owner}`}>\r\n                        View\r\n                      </Link>\r\n                    </Stack>\r\n                  </Stack>\r\n                  <Divider sx={{ my: 1.5 }} />\r\n                </Stack>\r\n              ))\r\n            ) : (\r\n              <Stack alignItems=\"Center\" spacing={2}>\r\n                <Typography variant=\"h3\">No Data</Typography>\r\n              </Stack>\r\n            )}\r\n          </TabPanel>\r\n          <Stack direction=\"row\" justifyContent=\"center\">\r\n            <Pagination\r\n              color=\"primary\"\r\n              count={mode === 'token' ? tokensTotalPage : liquiditiesTotalPage}\r\n              page={page}\r\n              onChange={handlePageChange}\r\n              sx={{ marginTop: '20px' }}\r\n            />\r\n          </Stack>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","hidden","id","concat","Box","sx","py","Typography","LockList","hash","useLocation","_useState","useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","tab","setTab","account","useActiveWeb3React","_useState5","_useState6","search","setSearch","_useState7","_useState8","page","setPage","liquidities","useSelector","state","liquidityLocks","liquiditiesTotalPage","totalPage","tokens","tokenLocks","tokensTotalPage","dispatch","useDispatch","network","chainId","console","log","useEffect","slice","getTokens","getLiquidities","Page","title","Container","maxWidth","_jsxs","Card","width","p","transition","cursor","boxShadow","theme","customShadows","z24","TextField","fullWidth","label","onChange","e","target","Stack","direction","justifyContent","Tabs","newValue","textColor","indicatorColor","mt","align","Tab","fontWeight","length","map","item","alignItems","spacing","component","src","fontSize","name","color","symbol","parseFloat","formatUnits","amount","decimals","toLocaleString","Link","RouterLink","to","token","owner","Divider","my","variant","zIndex","ml","token0_name","token1_name","token0_symbol","token1_symbol","commify","Pagination","count","marginTop"],"sourceRoot":""}