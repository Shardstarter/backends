{"version":3,"file":"static/js/2156.e4b89ba2.chunk.js","mappings":"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","sources":["pages/Deals.js"],"sourcesContent":["import { MHidden } from '../components/@material-extend';\r\nimport { Box, Grid, Modal } from '@mui/material';\r\nimport MyCalendar from './MyCalendar';\r\nimport { DEALS_TAB, PROJECT_STATUS } from '../config/constants';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getProjectStatus, imageURL } from '../utils';\r\nimport LaunchCard from '../components/LaunchCard';\r\nimport MyProjectCard from '../components/MyProjectCard';\r\nimport PhoneProjectCard from '../components/PhoneProjectCard';\r\nimport Page from '../components/Page';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useActiveWeb3React from '../hooks/useActiveWeb3React';\r\nimport { getPools } from '../redux/slices/pools';\r\nimport apis from '../services';\r\n\r\nconst Deals = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const { pathname } = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const { account } = useActiveWeb3React();\r\n\r\n  //Pagination part\r\n  const [tab, setTab] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [pools, setPools] = useState([]);\r\n\r\n  const network = useSelector((state) => state.network.chainId);\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    (async () => {\r\n      setIsLoading(true);\r\n      await dispatch(getPools(network, tab, account));\r\n      const response = await apis.getDeals();\r\n\r\n      if (response.statusText === 'OK') {\r\n        const _pools = response.data.pools;\r\n        _pools.map((pool) => {\r\n          pool.privacy = pool?.whitelistable ? 'Private' : 'Public';\r\n          pool.tag = pool?.deal;\r\n\r\n          var startDateTime = new Date(pool.startDateTime)\r\n          var endDateTime = new Date(pool.endDateTime)\r\n          var nowDateTime = new Date();\r\n\r\n          if (nowDateTime < startDateTime) pool.status = 1; //upcoming\r\n          else if (nowDateTime <= endDateTime) pool.status = 2; //open\r\n          else if (nowDateTime > endDateTime) pool.status = 3; //closed\r\n        })\r\n        setPools(_pools);\r\n        console.log(pools);\r\n      }\r\n\r\n      if (!unmounted) setIsLoading(false);\r\n    })();\r\n    return () => (unmounted = true);\r\n  }, [account, dispatch, network, tab]);\r\n\r\n  return (\r\n    <Page  style={{ backgroundColor: '#171819' }}>\r\n      <MHidden width=\"mdDown\">\r\n        <Grid paddingLeft={'14%'} paddingRight={'14%'} paddingTop=\"30px\">\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box margin=\"150px 14% 0px 14%\" style={{ backgroundColor: 'rgba(35, 35, 35, 0.5)', blurRadius: 12 }}>\r\n              <MyCalendar />\r\n            </Box>\r\n          </Modal>\r\n          <Grid container direction=\"row\" align=\"center\" justifyContent={'center'}>\r\n            {DEALS_TAB.map(({ id, link, title }) => {\r\n              const btnColor = pathname === link ? 'light' : 'dark';\r\n              return (\r\n                <Box key={id} component={Link} to={link} className={`btn btn-${btnColor} text-info mx-1`}>\r\n                  {title}\r\n                </Box>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid align=\"center\" justifyContent={'center'}>\r\n            <Box component=\"img\" marginTop=\"30px\" src={imageURL('projects.png')}></Box>\r\n          </Grid>\r\n          <Grid container direction=\"row\" marginTop=\"90px\" marginBottom=\"50px\" gap={1}>\r\n            <Grid item container md={8} justifyContent=\"flex-end\">\r\n              <Box component=\"button\" className=\"btn btn-dark text-info mx-1\">\r\n                {/* <i className=\"fa-solid fa-calendar-days text-info mx-1\"></i>Calendar */}\r\n\r\n                <Box component={'a'} href=\"/calender\" sx={{ textDecoration: 'none' }}>\r\n                  <Box component=\"img\" src={imageURL('Calendar.png')} />\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item md={3.5} position=\"relative\" display=\"flex\">\r\n              <Box\r\n                component=\"input\"\r\n                placeholder=\"Search...\"\r\n                borderRadius={1}\r\n                style={{\r\n                  paddingLeft: '10px',\r\n                  height: '50px',\r\n                  width: '100%',\r\n                  border: 'none',\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }}\r\n              />\r\n              <Box\r\n                component=\"button\"\r\n                border=\"none\"\r\n                borderRadius={1}\r\n                height=\"40px\"\r\n                width=\"90px\"\r\n                position=\"absolute\"\r\n                right=\"10px\"\r\n                top=\"5px\"\r\n                style={{ backgroundColor: '#56C5FF', color: 'white' }}\r\n              >\r\n                Search\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Projects open */}\r\n          <Box component=\"h2\" color=\"#00BFFF\" marginTop=\"40px\">\r\n            Projects Open Now\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            {pools.map((pool, poolIdx) => {\r\n              if (pool.status == 2)\r\n                return <LaunchCard key={poolIdx} {...pool}></LaunchCard>;\r\n            })}\r\n          </Grid>\r\n\r\n\r\n          {/* Next to launch */}\r\n          <Box component=\"h2\" color=\"#00BFFF\" marginTop=\"40px\">\r\n            Projects Upcoming\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            {pools.length > 0 &&\r\n              pools.map((pool, poolIdx) => {\r\n                if (pool.status == 1)\r\n                  return <LaunchCard key={poolIdx} {...pool}></LaunchCard>;\r\n              })}\r\n          </Grid>\r\n\r\n          {/* Closed projects */}\r\n          <Box component=\"h2\" color=\"#00BFFF\" marginTop=\"40px\">\r\n            Projects Closed\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            {pools.map((pool, poolIdx) => {\r\n              if (pool.status == 3)\r\n                return <LaunchCard key={poolIdx} {...pool}></LaunchCard>;\r\n            })}\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </MHidden>\r\n\r\n      <MHidden width=\"mdUp\">\r\n        <Grid paddingLeft={'5%'} paddingRight={'5%'} paddingTop=\"30px\">\r\n          <Grid container direction=\"row\" align=\"center\" justifyContent={'center'}>\r\n            {DEALS_TAB.map(({ id, link, title }) => {\r\n              const btnColor = pathname === link ? 'light' : 'dark';\r\n              return (\r\n                <Box key={id} component={Link} to={link} className={`btn btn-${btnColor} text-info mx-1`}>\r\n                  {title}\r\n                </Box>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid align=\"center\" justifyContent={'center'}>\r\n            <Box component=\"img\" marginTop=\"30px\" src={imageURL('projects.png')}></Box>\r\n          </Grid>\r\n\r\n          <Grid container marginBottom=\"20px\">\r\n            <Grid item xs={2} marginTop=\"15px\">\r\n              <a href=\"/src/pages/PhoneCalendar\">\r\n                <Box\r\n                  component=\"button\"\r\n                  href=\"/phonecalendar\"\r\n                  padding=\"10px\"\r\n                  backgroundColor=\"rgba(255, 255, 255, 0.1)\"\r\n                  border=\"none\"\r\n                  borderRadius={0.5}\r\n                >\r\n                  <Box component=\"img\" src={imageURL('Calendar.png')} />\r\n                </Box>\r\n              </a>\r\n            </Grid>\r\n            <Grid item xs={2} marginTop=\"15px\">\r\n              <Box\r\n                component=\"button\"\r\n                padding=\"10px\"\r\n                backgroundColor=\"rgba(255, 255, 255, 0.1)\"\r\n                border=\"none\"\r\n                borderRadius={0.5}\r\n              >\r\n                <Box component=\"img\" src={imageURL('Search.png')} />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={8} component=\"h2\" color=\"#00BFFF\" fontSize={18} marginTop=\"20px\" marginBottom=\"20px\">\r\n            Projects Open Now\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            {pools.map((pool, poolIdx) => {\r\n              if (pool.status == 2)\r\n                return <LaunchCard key={poolIdx} {...pool} />;\r\n            })}\r\n          </Grid>\r\n\r\n          <Grid item xs={8} component=\"h2\" color=\"#00BFFF\" fontSize={18} marginTop=\"20px\" marginBottom=\"20px\">\r\n            Projects Upcoming\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            {pools.map((pool, poolIdx) => {\r\n              if (pool.status == 1)\r\n                return <LaunchCard key={poolIdx} {...pool} />;\r\n            })}\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={8} component=\"h2\" color=\"#00BFFF\" fontSize={18} marginTop=\"20px\" marginBottom=\"20px\">\r\n            Projects Closed\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            {pools.map((pool, poolIdx) => {\r\n              if (pool.status == 3)\r\n                return <LaunchCard key={poolIdx} {...pool} />;\r\n            })}\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </MHidden>\r\n      {/* </Container> */}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Deals;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","open","setOpen","pathname","useLocation","dispatch","useDispatch","account","useActiveWeb3React","_useState3","_useState4","tab","_useState5","_useState6","setIsLoading","_useState7","_useState8","pools","setPools","network","useSelector","state","chainId","useEffect","unmounted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_pools","wrap","_context","prev","next","getPools","apis","sent","statusText","data","map","pool","privacy","whitelistable","tag","deal","startDateTime","Date","endDateTime","nowDateTime","status","console","log","stop","_jsxs","Page","style","backgroundColor","children","_jsx","MHidden","width","Grid","paddingLeft","paddingRight","paddingTop","Modal","onClose","Box","margin","blurRadius","MyCalendar","container","direction","align","justifyContent","DEALS_TAB","_ref2","id","link","title","btnColor","component","Link","to","className","concat","marginTop","src","imageURL","marginBottom","gap","item","md","href","sx","textDecoration","position","display","placeholder","borderRadius","height","border","right","top","color","spacing","poolIdx","LaunchCard","_objectSpread","length","_ref3","xs","padding","fontSize"],"sourceRoot":""}