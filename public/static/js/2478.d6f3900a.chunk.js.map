{"version":3,"file":"static/js/2478.d6f3900a.chunk.js","mappings":"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","sources":["pages/Dashboard.js"],"sourcesContent":["import { useState, useContext, useEffect } from 'react';\r\nimport * as React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport { useNavigate } from 'react-router';\r\n// material\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Grid,\r\n    Button,\r\n    Card,\r\n    CardContent\r\n} from '@mui/material';\r\n\r\nimport { getPools } from 'redux/slices/pools';\r\nimport { SearchContext } from 'contexts/SearchContext';\r\nimport { useIDOContract } from 'hooks/useContract';\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\r\n// hooks\r\nimport useSettings from 'hooks/useSettings';\r\nimport { useMainStakingStatus } from 'hooks/useMyStatus';\r\n// components\r\nimport Page from 'components/Page';\r\nimport MHidden from 'components/@material-extend/MHidden'\r\nimport { imageURL } from '../utils';\r\nimport apis from 'services';\r\nimport { CURRENCY_SYMBOL } from 'config/constants';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Stakepad() {\r\n    const { themeStretch } = useSettings();\r\n    const { hash } = useLocation();\r\n\r\n    const dispatch = useDispatch();\r\n    const { account } = useActiveWeb3React();\r\n    const idoContract = useIDOContract();\r\n\r\n    const [search, setSearch] = useContext(SearchContext);\r\n\r\n    //Pagination part\r\n    const [pageSize, setPageSize] = useState(50);\r\n    const [page, setPage] = useState(1);\r\n    const [tab, setTab] = useState(0);\r\n    const [paneTab, setPaneTab] = useState(0);\r\n    const [filter, setFilter] = useState(-1);\r\n    const [sort, setSort] = useState('createdAt');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [value, setValue] = React.useState(30);\r\n\r\n    const network = useSelector((state) => state.network.chainId);\r\n    const pools = useSelector((state) => state.pools.pools);\r\n    const totalPage = useSelector((state) => state.pools.totalPage);\r\n    const handlePageChange = (e, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    //--------------------\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        (async () => {\r\n            setIsLoading(true);\r\n            await dispatch(getPools(network, page, search, tab, sort, filter, account));\r\n            if (!unmounted)\r\n                setIsLoading(false);\r\n        })();\r\n        return () => unmounted = true;\r\n    }, [account, dispatch, filter, network, page, search, sort, tab]);\r\n\r\n    useEffect(() => {\r\n        switch (hash) {\r\n            case '#my-contributions':\r\n                setTab(1);\r\n                break;\r\n            case '#my-alarms':\r\n                setTab(2);\r\n                break;\r\n            case '#my-presales':\r\n                setTab(3);\r\n                break;\r\n            default:\r\n                setTab(0);\r\n        }\r\n    }, [hash]);\r\n    const TabPanes = [\r\n        { index: 0, name: \"MGV BSC\" },\r\n        { index: 1, name: \"MEGA MATIC\" },\r\n        { index: 2, name: \"MEGA AVAX\" },\r\n        { index: 3, name: \"MEGA FTM\" },\r\n    ]\r\n\r\n    const [userInfo, setUserInfo] = useState({});\r\n    useEffect(() => {\r\n        const getUserEmail = async () => {\r\n            const response = await apis.getUserInfo({\r\n                wallet_address: account\r\n            });\r\n            if (response.data.result) {\r\n                setUserInfo(response.data.data);\r\n            }\r\n            else {\r\n                alert(response.data.message)\r\n            }\r\n        }\r\n        if (account) getUserEmail();\r\n    }, [account])\r\n\r\n    const saveEmail = async (email) => {\r\n        try {\r\n            const response = await apis.setUserEmail({\r\n                wallet_address: account,\r\n                email: email\r\n            });\r\n            if (response.data.result) {\r\n                alert('success')\r\n            }\r\n            else {\r\n                alert(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n    return (\r\n        <Page  style={{ backgroundColor: \"#171819\" }} >\r\n            {/* <Container maxWidth='md'> */}\r\n            <MHidden width=\"mdDown\">\r\n\r\n                <Grid paddingLeft={'10%'} paddingRight={'10%'} paddingTop=\"30px\"  >\r\n                    <Grid container direction=\"row\" position=\"relative\" display=\"flex\">\r\n                        <Grid item height=\"60px\" display=\"flex\">\r\n                            <Box bgcolor={'#232323'} borderRadius={1} justifyContent=\"center\" display=\"flex\">\r\n                                {TabPanes.map((pane, i) => (\r\n                                    paneTab === pane.index ?\r\n                                        <Box component=\"button\" key={i} onClick={() => setPaneTab(pane.index)} style={{ color: \"white\", backgroundColor: \"#56C5FF\", border: \"none\", borderRadius: 4 }} padding=\"10px\">{pane.name}</Box> :\r\n                                        <Box component=\"button\" key={i} onClick={() => setPaneTab(pane.index)} style={{ color: \"#56C5FF\", backgroundColor: \"rgb(255, 255, 255, 0)\", border: \"none\" }} padding=\"10px\">{pane.name}</Box>\r\n                                ))}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Box component=\"button\" position=\"absolute\" right=\"5px\" style={{ backgroundColor: \"#02FF7B\", border: \"none\", height: '58px', color: \"white\", borderRadius: 8, width: \"120px\" }}> KYC </Box>\r\n                    </Grid>\r\n                    <ProgressCard></ProgressCard>\r\n                    <Grid container direction={\"row\"} marginTop=\"30px\" spacing={2} >\r\n                        <Grid item md={6}>\r\n                            <AddressCard src={imageURL('email.svg')} title=\"Email\" address={userInfo?.email} onClickButton={saveEmail}></AddressCard>\r\n\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                            <AddressCard src={imageURL('solana-sol-logo 1.png')} title=\"EVM address\" address={account} token={1} readonly={true}></AddressCard>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <YourParticipationBox></YourParticipationBox>\r\n                </Grid>\r\n            </MHidden>\r\n            <MHidden width=\"mdUp\">\r\n                <Grid paddingLeft={'5%'} paddingRight={'5%'} paddingTop=\"30px\"  >\r\n                    <Grid container direction=\"row\" position=\"relative\" display=\"flex\" borderRadius={2}>\r\n                        <Grid item xs={6} padding=\"5px\">\r\n                            <Box component=\"button\" borderRadius={1} width=\"100%\" color=\"white\" border=\"1px solid #56C5FF\" padding=\"3px 8px\" backgroundColor=\"rgb(255, 255, 255, 0)\">\r\n                                MEGA BSC\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={6} padding=\"5px\">\r\n                            <Box component=\"button\" width=\"100%\" borderRadius={1} padding=\"3px 8px\" style={{ backgroundColor: \"#02FF7B\", border: \"none\", color: \"white\" }}> KYC </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <ProgressCard></ProgressCard>\r\n                    <Grid container marginTop=\"30px\" spacing={2} >\r\n                        <Grid item xs={12}>\r\n                            <AddressCard src={imageURL('email.svg')} title=\"Email\" address=\"Info@megacapital.io\"></AddressCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <AddressCard src={imageURL('solana-sol-logo 1.png')} title=\"Solana address\" address=\"1231sdsxssds....124\" token={1}></AddressCard>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid marginTop=\"20px\" color=\"#56C5FF\" fontSize=\"20px\" display=\"flex\" justifyContent=\"center\">\r\n                        Projects\r\n                    </Grid>\r\n                    <Grid container direction={\"row\"} marginTop=\"10px\" spacing={2} >\r\n                        <Grid item xs={6}><ProjectCard title=\"Allocated Projects\" amount=\"23\"></ProjectCard></Grid>\r\n                        <Grid item xs={6}><ProjectCard title=\"Total Allocated\" amount=\"$12345\"></ProjectCard></Grid>\r\n                    </Grid>\r\n                    <Grid marginTop=\"20px\" marginBottom=\"20px\" color=\"#56C5FF\" fontSize=\"20px\" display=\"flex\" justifyContent=\"center\">\r\n                        My Projects\r\n                    </Grid>\r\n                    <MyProjectCard angle=\"down\"></MyProjectCard>\r\n                    <YourParticipationBox></YourParticipationBox>\r\n                </Grid>\r\n            </MHidden>\r\n            {/* </Container> */}\r\n        </Page>\r\n    );\r\n}\r\nfunction VoteCard(props) {\r\n    return (\r\n        <Grid container bgcolor={'#272727'} direction=\"row\" sx={{ width: \"100%\" }} padding=\"5px\" marginTop=\"40px\">\r\n            <Grid item container md={7} sm={12} >\r\n                <Box component=\"img\" src=\"img/catecoin.webp\"></Box>\r\n                <Box marginTop='13px' marginLeft=\"10px\"> {props.name}</Box>\r\n            </Grid>\r\n            <Grid item md={1} sm={3} >\r\n                <Box marginTop='13px'>NFT</Box>\r\n            </Grid>\r\n            <Grid item md={1.5} sm={3}>\r\n                <Button className=\"btn btn-info text-light mx-2 px-5 mt-2\">YES</Button>\r\n            </Grid>\r\n            <Grid item md={1.5} sm={3}>\r\n                <Button className=\"btn btn-outline-info mx-2 px-5 mt-2\">NO</Button>\r\n            </Grid>\r\n            <Grid item md={1} sm={3}>\r\n                <Button><i className=\"Nft-arrow fa-solid fa-angle-down text-info mx-5 pt-3\"></i></Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\nfunction ProgressCard() {\r\n    const { tier, staked_amount } = useMainStakingStatus();\r\n    const [value, setValue] = React.useState(30);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Grid container direction=\"row\" marginTop=\"30px\">\r\n            <Grid item container md={3} direction=\"column\" style={{ backgroundColor: \"#232323\", borderRadius: 5 }}>\r\n                <Grid item padding=\"10px\"><Box component=\"img\" width=\"100%\" height=\"100px\" position=\"relative\" src={imageURL('bit.png')} ></Box></Grid>\r\n                <Grid item padding=\"10px\" display=\"flex\" position=\"relative\" marginTop=\"10px\">\r\n                    <Box fontSize=\"19px\" color={'white'}>Your Tier</Box>\r\n                    <Box position=\"absolute\" padding=\"5px 10px 5px 10px\" borderRadius={0.5} right=\"12px\" style={{ backgroundColor: \"rgba(255, 255, 255, 0.1)\", color: \"white\" }}>{tier}</Box>\r\n                </Grid>\r\n                <Grid item padding=\"10px\" display=\"flex\" position=\"relative\" marginTop=\"10px\">\r\n                    <Box fontSize=\"19px\" color={'white'}> Staked Amount</Box>\r\n                    <Box position=\"absolute\" padding=\"5px 10px 5px 10px\" borderRadius={0.5} right=\"12px\" style={{ backgroundColor: \"rgba(255, 255, 255, 0.1)\", color: \"white\" }}>\r\n                        {staked_amount}\r\n                    </Box>\r\n                </Grid>\r\n                {/* <Grid item marginTop=\"10px\"><Box component=\"button\" border=\"none\" borderRadius={1} height=\"30px\" width=\"100%\" style={{ backgroundColor: \"#56C5FF\", color: \"white\" }}>INFO</Box></Grid> */}\r\n            </Grid>\r\n            <MHidden width=\"mdDown\">\r\n                <Grid container item width=\"73%\" marginLeft=\"2%\" paddingLeft=\"20px\" style={{ backgroundColor: \"#232323\", borderRadius: 5 }}>\r\n                    <Grid item md={8}> <Box marginTop=\"20px\" component=\"h3\" color=\"#56C5FF\">Progress</Box></Grid>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item md={2.4}><MySlideBar current={100} title=\"Alpha\"></MySlideBar></Grid>\r\n                        <Grid item md={2.4}><MySlideBar current={100} title=\"Beta\"></MySlideBar></Grid>\r\n                        <Grid item md={2.4}><MySlideBar current={100} title=\"Gamma\"></MySlideBar></Grid>\r\n                        <Grid item md={2.4}><MySlideBar current={20} title=\"Epilson\"></MySlideBar></Grid>\r\n                        <Grid item md={2.4}><MySlideBar current={30} title=\"Zeta\"></MySlideBar></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </MHidden>\r\n            <MHidden width=\"mdUp\">\r\n                <Grid backgroundColor=\"#232323\" borderRadius={1} container marginTop=\"20px\" paddingBottom=\"30px\" >\r\n                    <Grid item xs={12} marginTop=\"20px\" justifyContent=\"center\" display=\"flex\" color=\"#56C5FF\">Tier</Grid>\r\n                    <Grid item xs={12} marginTop=\"30px\">\r\n                        <Box position=\"relative\" display=\"flex\">\r\n                            <Box width=\"100%\" height=\"10px\" borderRadius={2} backgroundColor=\"white\" />\r\n                            <Box position=\"absolute\" left=\"0px\" borderRadius={2} height=\"10px\" width={`calc(50/100*100%)`} backgroundColor=\"#56C5FF\" />\r\n                            {/* <Box position=\"absolute\" left=\"0px\" borderRadius={2} height=\"10px\" width={`calc(${props.current}/100*100%)`} backgroundColor=\"#56C5FF\"/> */}\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} justifyContent=\"center\" display=\"flex\">\r\n                        <Box color=\"white\">Alpha</Box>\r\n                        <Box color=\"white\">...MGV</Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </MHidden>\r\n        </Grid>\r\n    );\r\n}\r\nfunction MySlideBar(props) {\r\n    return (\r\n        <>\r\n            <Box sx={{ width: \"97%\" }}>\r\n\r\n                <Box position=\"relative\" display=\"flex\">\r\n                    <Box width=\"100%\" height=\"10px\" borderRadius={2} backgroundColor=\"white\" />\r\n                    <Box position=\"absolute\" left=\"0px\" borderRadius={2} height=\"10px\" width={`calc(${props.current}/100*100%)`} backgroundColor=\"#56C5FF\" />\r\n                </Box>\r\n            </Box>\r\n            <Box position=\"relative\">\r\n                <Box position=\"absolute\" left=\"1px\" color=\"white\">{props.title}</Box>\r\n                <Box position=\"absolute\" right=\"15px\" color=\"#696974\">0 MEGA</Box>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nfunction AddressCard(props) {\r\n    const [address, setAddress] = useState(props.address);\r\n    useEffect(() => {\r\n        setAddress(props.address)\r\n    }, [props])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\" bgcolor={\"#303030\"} padding=\"20px\" borderRadius={1}>\r\n                <Grid item md={2} display=\"flex\" align=\"center\" justifyContent=\"center\">\r\n                    <Box backgroundColor=\"rgba(255, 255, 255, 0.1)\" width=\"70px\" height=\"70px\" borderRadius=\"50%\" padding=\"15px\"\r\n                        justifyContent=\"center\" display=\"flex\"><Box component=\"img\" src={props.src}></Box></Box>\r\n                </Grid>\r\n                <Grid item md={8} alignItems=\"left\" container marginTop=\"5px\" >\r\n                    <Grid fontSize=\"20px\" color=\"white\" item sm={4} style={{ paddingTop: '10px' }}>{props.title}</Grid>\r\n                    <Grid fontSize=\"15px\" color=\"white\" item sm={8} style={{ paddingTop: '15px' }}>\r\n                        <input value={address} style={{ width: '90%' }} onChange={(e) => setAddress(e.target.value)} readOnly={props.readonly} />\r\n                        {(props.token === 1) ? <Box component=\"button\" backgroundColor=\"#303030\" border=\"none\"><Box component=\"img\" src={imageURL('copy.png')} /></Box> : <Box />}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container md={2} display=\"flex\" justifyContent=\"center\">\r\n                    {!props.readonly && <Button onClick={() => props.onClickButton(address)}>EDIT</Button>}\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n}\r\nfunction ProjectCard(props) {\r\n    return (\r\n        <>\r\n            <MHidden width=\"mdDown\">\r\n                <Grid bgcolor={\"#232323\"} padding=\"20px\" borderRadius={1}>\r\n                    <Grid fontSize=\"24px\" color=\"white\">{props.title}</Grid>\r\n                    <Grid color=\"#56C5FF\" fontSize=\"34px\">{props.amount}</Grid>\r\n                </Grid>\r\n            </MHidden>\r\n            <MHidden width=\"mdUp\">\r\n                <Grid bgcolor={\"#232323\"} padding=\"20px\" borderRadius={1}>\r\n                    <Grid color=\"#56C5FF\" fontSize=\"14px\">{props.title}</Grid>\r\n                    <Grid fontSize=\"19.38px\" color=\"white\">{props.amount}</Grid>\r\n                </Grid>\r\n            </MHidden>\r\n        </>\r\n    );\r\n}\r\nfunction MyProjectCard(props) {\r\n    return (\r\n        <>\r\n            <MHidden width=\"mdDown\">\r\n                <Grid container direction=\"row\" bgcolor={\"#232323\"} borderRadius={1} padding=\"15px\" marginTop=\"20px\">\r\n                    <Grid item md={1}>\r\n                        <Box component=\"img\" src={imageURL('geni-logo.png')}></Box>\r\n                    </Grid>\r\n                    <Grid item md={3} align=\"left\" justifyCenter=\"flex-start\">\r\n                        <Grid><Box backgroundColor=\"rgba(255, 255, 255, 0.1)\" display=\"flex\" justifyContent=\"center\" width=\"50%\" color=\"white\">Ended</Box></Grid>\r\n                        <Grid color=\"white\">GemUni IDO</Grid>\r\n                    </Grid>\r\n                    <Grid item md={2} align=\"left\" justifyCenter=\"flex-start\">\r\n                        <Grid color=\"white\">Start In</Grid>\r\n                        <Grid color=\"white\">17/01/22</Grid>\r\n                    </Grid>\r\n                    <Grid item md={2} align=\"left\" justifyCenter=\"flex-start\">\r\n                        <Grid color=\"white\">End In</Grid>\r\n                        <Grid color=\"white\">17/01/22</Grid>\r\n                    </Grid>\r\n                    <Grid item md={2} align=\"left\" justifyCenter=\"flex-start\">\r\n                        <Grid color=\"white\">Allocation</Grid>\r\n                        <Grid color=\"white\">300</Grid>\r\n                    </Grid>\r\n                    <Grid item md={2} alignItems=\"center\" justifyContent=\"right\" display=\"flex\" paddingRight=\"15px\">\r\n                        {props.angle === \"down\" ? <Box component=\"img\" src={imageURL('angle_down.png')} />\r\n                            : <Box component=\"img\" src={imageURL('angle_up.png')} />}\r\n                    </Grid>\r\n                </Grid>\r\n            </MHidden>\r\n            <MHidden width=\"mdUp\">\r\n                <Grid item container xs={12} bgcolor={\"#232323\"} padding=\"15px\" border=\"1px solid #56C5FF\" borderRadius={1} boxShadow=\"0px 6px 50px #000000;\">\r\n                    <Grid item xs={2}>\r\n                        <Box component=\"img\" src={imageURL('geni-logo.png')} />\r\n                    </Grid>\r\n                    <Grid item xs={8} paddingLeft=\"10px\" align=\"left\" justifyCenter=\"flex-start\">\r\n                        <Grid><Box backgroundColor=\"rgba(255, 255, 255, 0.1)\" display=\"flex\" justifyContent=\"center\" width=\"50%\" color=\"white\">Ended</Box></Grid>\r\n                        <Grid color=\"white\">GemUni IDO</Grid>\r\n                    </Grid>\r\n                    <Grid item xs={2} align=\"center\" justifyCenter=\"center\" paddingTop=\"23px\">\r\n                        {props.angle === \"down\" ? <Box component=\"img\" src={imageURL('angle_down.png')} />\r\n                            : <Box component=\"img\" src={imageURL('angle_up.png')} />}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container xs={12} bgcolor={\"#232323\"} padding=\"15px\" marginTop=\"10px\" borderRadius={1} boxShadow=\"0px 6px 50px #000000;\">\r\n                    <Grid item xs={7} align=\"left\" justifyCenter=\"flex-start\">\r\n                        <Grid color=\"#F1F0F0\" fontSize={15}>Start In</Grid>\r\n                        <Grid color=\"white\" paddingTop=\"15px\" fontSize={19}>17/01/22</Grid>\r\n                    </Grid>\r\n                    <Grid item xs={5} align=\"left\" justifyCenter=\"flex-start\">\r\n                        <Grid color=\"#F1F0F0\" fontSize={15}>End In</Grid>\r\n                        <Grid color=\"white\" paddingTop=\"15px\" fontSize={19}>17/01/22</Grid>\r\n                    </Grid>\r\n                    <Grid item xs={7} align=\"left\" marginTop=\"25px\">\r\n                        <Grid color=\"#F1F0F0\" fontSize={15}>Allocation</Grid>\r\n                        <Grid color=\"white\" paddingTop=\"15px\" fontSize={19}>300</Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </MHidden>\r\n        </>\r\n    );\r\n}\r\nfunction YourParticipationBox() {\r\n    const { account, chainId } = useActiveWeb3React();\r\n    const [dealsStatus, setDealsStatus] = useState([])\r\n    const [totalParticipate, setTotalParticipate] = useState(0)\r\n    useEffect(() => {\r\n        const dosth = async () => {\r\n            let total = 0;\r\n            const response = await apis.getUserParticipations({ wallet_address: account })\r\n            if (response.data.result) {\r\n                let rows = response.data.data;\r\n                setDealsStatus(rows)\r\n\r\n                rows.map(item => {\r\n                    total += Number(item.deposit_amount)\r\n                })\r\n                setTotalParticipate(total)\r\n\r\n            } else {\r\n                console.log('getUserParticipations: ', response.data.message)\r\n            }\r\n        }\r\n\r\n        if (account) {\r\n            dosth();\r\n        }\r\n    }, [account])\r\n\r\n    return (\r\n        <>\r\n            <Grid marginTop=\"20px\" color=\"#56C5FF\" fontSize=\"40px\">\r\n                Your Deal Participation\r\n            </Grid>\r\n            <Grid container direction={\"row\"} marginTop=\"10px\" spacing={2} >\r\n                <Grid item md={6}><ProjectCard title=\"Allocated Projects\" amount={dealsStatus.length}></ProjectCard></Grid>\r\n                <Grid item md={6}><ProjectCard title=\"Total Allocated\" amount={totalParticipate + \" \" + CURRENCY_SYMBOL[chainId]}></ProjectCard></Grid>\r\n            </Grid>\r\n\r\n            <Grid container direction=\"row\" bgcolor=\"#232323\" width=\"100%\" marginTop=\"30px\" borderRadius={1}>\r\n                <Grid container padding='15px'>\r\n                    <Grid item sm={12} md={6} display=\"flex\" justifyContent={'flex-start'}><Box component=\"h5\" fontFamily={'system-ui'} color=\"#56C5FF\">\r\n                        Your Participation</Box></Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" bgcolor=\"rgba(86, 197, 255, 0.1)\" height=\"40px\" paddingTop=\"5px\">\r\n                    <Grid item md={0.5} display=\"flex\" justifyContent=\"center\" color=\"white\">No.</Grid>\r\n                    <Grid item md={1.5} display=\"flex\" justifyContent=\"center\" color=\"white\">Project Name</Grid>\r\n                    <Grid item md={1.5} display=\"flex\" justifyContent=\"center\" color=\"white\">Deal Type</Grid>\r\n                    <Grid item md={3} display=\"flex\" justifyContent=\"center\" color=\"white\">Date</Grid>\r\n                    <Grid item md={3} display=\"flex\" justifyContent=\"center\" color=\"white\">Participation</Grid>\r\n                    <Grid item md={1.5} display=\"flex\" justifyContent=\"center\" color=\"white\">Claimed</Grid>\r\n                    <Grid item md={1} display=\"flex\" justifyContent=\"center\" color=\"white\">Action</Grid>\r\n                </Grid>\r\n\r\n                {dealsStatus.map((item, index) => <>\r\n                    <Grid container marginTop='10px' direction=\"row\" height=\"40px\" fontSize=\"19px\">\r\n                        <Grid item md={0.5} display=\"flex\" justifyContent=\"center\" color=\"white\">{index + 1}</Grid>\r\n                        <Grid item md={1.5} display=\"flex\" justifyContent=\"center\" color=\"white\">{item.projectName}</Grid>\r\n                        <Grid item md={1.5} display=\"flex\" justifyContent=\"center\" color=\"white\">{item.deal}</Grid>\r\n                        <Grid item md={3} display=\"flex\" justifyContent=\"center\" color=\"white\">{new Date(item.updatedAt).toDateString()}</Grid>\r\n                        <Grid item md={3} display=\"flex\" justifyContent=\"center\" color=\"white\">{item.deposit_amount} {CURRENCY_SYMBOL[chainId]}</Grid>\r\n                        <Grid item md={1.5} display=\"flex\" justifyContent=\"center\" color=\"white\">0.0000</Grid>\r\n                        <Grid item md={1} display=\"flex\" justifyContent=\"center\" bgColor=\"#303030\" width=\"100%\" color=\"#56C5FF\">\r\n                            <Box display=\"flex\" justifyContent=\"center\" backgroundColor=\"rgba(255, 255, 255, 0.1)\" width=\"70px\" height=\"30px\">Claim</Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>)}\r\n\r\n            </Grid>\r\n        </>\r\n    );\r\n}"],"names":["Stakepad","useSettings","themeStretch","hash","useLocation","dispatch","useDispatch","account","useActiveWeb3React","_useContext","useIDOContract","useContext","SearchContext","_useContext2","_slicedToArray","search","_useState","useState","_useState2","_useState3","_useState4","page","_useState5","_useState6","tab","setTab","_useState7","_useState8","paneTab","setPaneTab","_useState9","_useState10","filter","_useState11","_useState12","sort","_useState13","_useState14","setIsLoading","_React$useState","React","_React$useState2","network","useSelector","state","chainId","pools","totalPage","useEffect","unmounted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getPools","stop","_useState15","_useState16","userInfo","setUserInfo","getUserEmail","_ref2","_callee2","response","_context2","apis","wallet_address","sent","data","result","alert","message","apply","arguments","saveEmail","_ref3","_callee3","email","_context3","t0","console","log","_x","_jsxs","Page","style","backgroundColor","children","_jsx","MHidden","width","Grid","paddingLeft","paddingRight","paddingTop","container","direction","position","display","item","height","Box","bgcolor","borderRadius","justifyContent","index","name","map","pane","i","component","onClick","color","border","padding","right","ProgressCard","marginTop","spacing","md","AddressCard","src","imageURL","title","address","onClickButton","token","readonly","YourParticipationBox","xs","fontSize","ProjectCard","amount","marginBottom","MyProjectCard","angle","_useMainStakingStatus","useMainStakingStatus","tier","staked_amount","_React$useState3","_React$useState4","marginLeft","MySlideBar","current","paddingBottom","left","props","_Fragment","sx","concat","_useState17","_useState18","setAddress","align","alignItems","sm","value","onChange","e","target","readOnly","Button","justifyCenter","boxShadow","_useActiveWeb3React2","_useState19","_useState20","dealsStatus","setDealsStatus","_useState21","_useState22","totalParticipate","setTotalParticipate","dosth","_ref4","_callee4","total","rows","_context4","Number","deposit_amount","length","CURRENCY_SYMBOL","fontFamily","projectName","deal","Date","updatedAt","toDateString","bgColor"],"sourceRoot":""}