{"version":3,"file":"static/js/8673.7da1d7ef.chunk.js","mappings":"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","sources":["components/_components/Card.js","components/_components/Input.js","components/_components/Pagination.js","components/_components/ProgressBar.js","pages/_pages/StakingPage/LeftStaking.js","pages/_pages/StakingPage/RightStaking.js","pages/_pages/StakingPage/MainStaking.js","pages/_pages/StakingPage/LiquidStaking.js","pages/_pages/StakingPage/PriceStaking.js","pages/_pages/StakingPage/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box } from '@mui/material';\r\nimport { Label } from './Label';\r\nimport { LinearProgressBar } from './ProgressBar';\r\nimport { SecondaryButton, IconButtonGroup } from './Button';\r\nimport { facebook, twitter, instagram, reddit } from 'utils/_utils/EntityFieldDefs';\r\n\r\nexport const RoundedCard = (props) => {\r\n  const { img, bgColor, label, width, height, color, size } = props;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        borderRadius: '22px',\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: bgColor,\r\n        marginTop: '8px',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      {img && <img src={img} width={11} alt=\"Green Dot\" style={{ marginRight: '10px' }} />}\r\n      <Label text={{ value: label, weight: 100, color, size }} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const ProjectCard = ({ project }) => {\r\n  const navigate = useNavigate();\r\n\r\n  project.percent = Number(project.weiRaised / project.hardCap * 100).toFixed(1);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: '500px',\r\n        width: '100%',\r\n        backgroundColor: '#000000',\r\n        padding: '30px',\r\n        borderRadius: '20px',\r\n        border: '1px solid #7070704C',\r\n        cursor: 'pointer'\r\n      }}\r\n      onClick={() => navigate(`/projects?address=${project.address}`)}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\">\r\n        <Box display=\"flex\" flexDirection=\"row\">\r\n          <img src={project.poster} alt={project.projectName} width={100} />\r\n          <Box sx={{ paddingLeft: '20px' }}>\r\n            <Label text={{ value: project.projectName, size: 30 }} />\r\n            <RoundedCard\r\n              img=\"_img/projects/greendot.png\"\r\n              bgColor=\"#171717\"\r\n              label=\"Active\"\r\n              width={122}\r\n              height={43}\r\n              color=\"green\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Label text={{ value: project.description, color: 'grey', weight: 100 }} sx={{ marginTop: '25px' }} />\r\n        <Box sx={{ marginTop: '30px', display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n          <Label text={{ value: 'Max Rise', size: 22, color: 'black' }} />\r\n          <Label text={{ value: \"SHM \" + project.hardCap, size: 22 }} />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            marginTop: '20px',\r\n            marginBottom: '30px',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Label text={{ value: 'Token Allocation', size: 22, color: 'black' }} />\r\n          <Label text={{ value: \"STU \" + project.hardCap * project.presaleRate, size: 22 }} />\r\n        </Box>\r\n        {/* Progress Box */}\r\n        <Box\r\n          sx={{\r\n            backgroundImage: \"url('_img/cards/bg.png')\",\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            borderRadius: '14px',\r\n            margin: '30px, 0px',\r\n            width: '100%',\r\n            padding: '16px 25px'\r\n          }}\r\n        >\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n            <Label text={{ value: \"Private Round A\" }} />\r\n            <Label text={{ value: \"2D:12H:14M\" }} />\r\n          </Box>\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginTop: '22px' }}>\r\n            <Label text={{ value: project.hardCap + \" SHM\", size: 16, color: 'grey' }} />\r\n            <Label text={{ value: `${project.percent}%`, size: 16, color: 'grey' }} />\r\n          </Box>\r\n          <Box>\r\n            <LinearProgressBar value={project.percent} />\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            marginTop: '40px',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            '@media (max-width: 600px)': {\r\n              flexDirection: 'column',\r\n              alignItems: 'center'\r\n            }\r\n          }}\r\n        >\r\n          <SecondaryButton label={project.privacy} sx={{ width: '190px' }} />\r\n          <IconButtonGroup size=\"40px\" elements={[\r\n            {\r\n              img: '_img/icon/chain.png',\r\n              path: project.ipfs?.website\r\n            },\r\n            {\r\n              img: '_img/icon/twitter.png',\r\n              path: project.ipfs?.twitter\r\n            },\r\n            {\r\n              img: '_img/icon/telegram.png',\r\n              path: project.ipfs?.telegram\r\n            },\r\n            {\r\n              img: '_img/icon/reddit.png',\r\n              path: project.ipfs?.discord\r\n            },\r\n          ]} />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { PrimaryButton } from 'components/_components/Button';\r\nimport { Label } from './Label';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport const SearchInput = (props) => {\r\n  return (\r\n    <TextField\r\n      placeholder={props.placeholder}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <SearchIcon />\r\n          </InputAdornment>\r\n        ),\r\n        style: {\r\n          fontWeight: 100,\r\n          backgroundColor: '#171717',\r\n          maxWidth: '400px',\r\n          height: '70px',\r\n          fontSize: '20px',\r\n          border: '1px solid #02FF7B'\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport const SubmitInput = ({ label='$SHMX', value, size, btnValue, sx, onClick, onChangeValue, readOnly }) => {\r\n  const [inputValue, setInputValue] = useState(value);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...sx,\r\n        position: 'relative',\r\n        border: '1px solid #02FF7B',\r\n        borderRadius: '8px',\r\n        background: '#171717',\r\n        '@media (max-width: 500px)': {\r\n          height: '192px'\r\n        }\r\n      }}\r\n    >\r\n      <input\r\n        type=\"number\"\r\n        value={inputValue}\r\n        onChange={(e) => { if (!readOnly) { setInputValue(e.target.value); onChangeValue(e.target.value) } }}\r\n        style={{\r\n          display: 'flex',\r\n          width: '100%',\r\n          height: '96px',\r\n          padding: '34px 0px 23px 30px',\r\n          fontSize: size,\r\n          fontFamily: 'MadaniArabic',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '8px',\r\n          background: '#171717'\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          backgroundColor: '#4B4B4B',\r\n          borderRadius: '7px',\r\n          padding: '6px 25px',\r\n          position: 'absolute',\r\n          top: '-20px',\r\n          left: '30px'\r\n        }}\r\n      >\r\n        <Label text={{ value: label, weight: 100, color: 'green' }} />\r\n      </Box>\r\n      <PrimaryButton\r\n        sx={{\r\n          width: '200px',\r\n          height: '70px',\r\n          position: 'absolute',\r\n          top: '13px',\r\n          right: '13px',\r\n          '@media (max-width: 500px)': {\r\n            top: '109px',\r\n            right: '0px',\r\n            width: 'calc(100% - 16px)',\r\n            margin: '0px 8px'\r\n          }\r\n        }}\r\n        label={btnValue}\r\n        hasFocus={true}\r\n        onClick={onClick}\r\n      />\r\n    </Box>\r\n  );\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { PrimaryButton } from './Button';\r\n\r\nconst Pagination = ({ id, setCurId }) => {\r\n  const [count, setCount] = useState(5);\r\n  const [prevString, setPrevString] = useState('Previous');\r\n  const [nextString, setNextString] = useState('Next');\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      if (window.innerWidth < 1000) {\r\n        setCount(3);\r\n      } else {\r\n        setCount(5);\r\n      }\r\n      if (window.innerWidth < 700) {\r\n        setPrevString('<');\r\n        setNextString('>');\r\n      } else {\r\n        setPrevString('Previous');\r\n        setNextString('Next');\r\n      }\r\n      if (window.innerWidth < 500) {\r\n        setCount(1);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // cleanup function to remove event listener when the component unmounts\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n      <PrimaryButton\r\n        label={prevString}\r\n        disabled={true}\r\n        sx={{ marginRight: '18px', '@media (max-width: 700px)': { width: '70px' }, width: '160px' }}\r\n      />\r\n      <Box sx={{ display: 'flex', columnGap: '3px' }}>\r\n        {Array(count)\r\n          .fill()\r\n          .map((_, idx) => (\r\n            <PrimaryButton\r\n              key={idx}\r\n              label={idx + 1}\r\n              hasFocus={idx === id}\r\n              sx={{ width: '70px' }}\r\n              onClick={() => setCurId(idx)}\r\n            />\r\n          ))}\r\n      </Box>\r\n      <PrimaryButton\r\n        label={nextString}\r\n        sx={{ marginLeft: '18px', '@media (max-width: 700px)': { width: '70px' }, width: '160px' }}\r\n        color=\"#fff\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n  [`&.${linearProgressClasses.colorPrimary}`]: {\r\n    backgroundColor: '#000'\r\n  },\r\n  [`& .${linearProgressClasses.bar}`]: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#02FF7B'\r\n  }\r\n}));\r\nconst GreyBorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n  [`&.${linearProgressClasses.colorPrimary}`]: {\r\n    backgroundColor: '#1A1A1A'\r\n  },\r\n  [`& .${linearProgressClasses.bar}`]: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#02FF7B'\r\n  }\r\n}));\r\n\r\nexport const LinearProgressBar = ({ value, bgColor }) =>\r\n  bgColor === 'grey' ? (\r\n    <GreyBorderLinearProgress variant=\"determinate\" value={value} />\r\n  ) : (\r\n    <BorderLinearProgress variant=\"determinate\" value={value} />\r\n  );\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Label } from 'components/_components/Label';\r\nimport { TIER_LEVEL } from 'config/constants';\r\n\r\nimport { useMainStakingStatus } from 'hooks/useMyStatus';\r\n\r\nfunction LeftStaking() {\r\n  const { tier, staked_amount, reward_amount } = useMainStakingStatus();\r\n\r\n  var tierimg;\r\n  switch (tier) {\r\n    case TIER_LEVEL.none_0:\r\n      tierimg = '_img/icon/tier0.png'\r\n      break;\r\n    case TIER_LEVEL.amber_1:\r\n      tierimg = '_img/icon/tier1.png'\r\n      break;\r\n    case TIER_LEVEL.chrome_2:\r\n      tierimg = '_img/icon/tier2.png'\r\n      break;\r\n    case TIER_LEVEL.jade_3:\r\n      tierimg = '_img/icon/tier3.png'\r\n      break;\r\n    case TIER_LEVEL.topaz_4:\r\n      tierimg = '_img/icon/tier4.png'\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  var Staking = {\r\n    icon: tierimg,\r\n    label: {\r\n      value: tier,\r\n      size: 40\r\n    },\r\n    value: {\r\n      value: 'Your Current Tier',\r\n      color: 'green',\r\n      size: 20,\r\n      weight: 100\r\n    },\r\n    details: [\r\n      {\r\n        imgUrl: '_img/icon/coins.png',\r\n        label: {\r\n          value: staked_amount + ' $SHMX',\r\n          size: 24\r\n        },\r\n        value: {\r\n          value: 'Staked $SHMX',\r\n          size: 18,\r\n          weight: 100,\r\n          color: 'grey'\r\n        }\r\n      },\r\n      {\r\n        imgUrl: '_img/icon/shield.png',\r\n        label: {\r\n          value: 'Guaranteed Allocation',\r\n          size: 24\r\n        },\r\n        value: {\r\n          value: '50% of Pool Size',\r\n          size: 18,\r\n          weight: 100,\r\n          color: 'grey'\r\n        }\r\n      },\r\n      {\r\n        imgUrl: '_img/icon/clock.png',\r\n        label: {\r\n          value: 'Minimum Staking',\r\n          size: 24\r\n        },\r\n        value: {\r\n          value: 'Stake for 56 Days',\r\n          size: 18,\r\n          weight: 100,\r\n          color: 'grey'\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        '@media (max-width: 1260px)': {\r\n          width: '100%'\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '60px 0px 60px 65px',\r\n        width: '43%'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          '@media(max-width: 500px)': {\r\n            flexDirection: 'column'\r\n          }\r\n        }}\r\n      >\r\n        <img src={Staking.icon} alt=\"tierlevel\" width={120} height={120} />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            '@media(max-width: 500px)': {\r\n              marginLeft: '0px'\r\n            },\r\n            marginLeft: '40px'\r\n          }}\r\n        >\r\n          <Label sx={{ minWidth: '75px' }} text={Staking.label} />\r\n          {Staking.value && <Label sx={{ marginTop: '10px' }} text={Staking.value} />}\r\n        </Box>\r\n      </Box>\r\n      <Box sx={{ marginTop: '42px' }}>\r\n        <Box sx={{ display: 'flex', rowGap: '30px', flexDirection: 'column', justifyContent: 'center' }}>\r\n          {Staking.details.map((detail, idx) => (\r\n            <Box key={idx} sx={{ display: 'flex' }}>\r\n              <img src={detail.imgUrl} alt={detail.imgUrl} width={80} height={80} />\r\n              <Box sx={{ display: 'flex', flexDirection: 'column', marginLeft: '22px' }}>\r\n                <Label sx={{ minWidth: '75px' }} text={detail.label} />\r\n                {detail.value && <Label text={detail.value} sx={{ marginTop: '5px' }} />}\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LeftStaking;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { RoundedLabel, Label } from 'components/_components/Label';\r\nimport { SubmitInput } from 'components/_components/Input';\r\nimport { PrimaryButton } from 'components/_components/Button';\r\n\r\nimport { formatUnits, parseUnits } from '@ethersproject/units';\r\nimport { useProjectMainTokenContract, useMainStakingContract } from 'hooks/useContract';\r\nimport { useMainStakingStatus } from 'hooks/useMyStatus';\r\nimport apis from 'services';\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\r\n\r\nfunction RightStaking() {\r\n  const { tier, staked_amount, reward_amount } = useMainStakingStatus();\r\n  const tokenContract = useProjectMainTokenContract(); //main staking token\r\n  const stakingContract = useMainStakingContract();\r\n  const { account } = useActiveWeb3React();\r\n\r\n  const [stakingpool_address, setStakingPoolAddress] = useState('')\r\n  const [wallet_balance, setWalletBalance] = useState(0)\r\n  const [data, setData] = useState({\r\n    token_decimal: 18,\r\n    staking_amount: 0, //input data\r\n    unstaking_amount: 0, //input data,\r\n    lockingReleaseTime: '', //user information\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setStakingPoolAddress(stakingContract.address)\r\n        let decimals = await tokenContract.decimals();\r\n        let wallet_balance = await tokenContract.balanceOf(account);\r\n        wallet_balance = formatUnits(wallet_balance, decimals);\r\n        setWalletBalance(wallet_balance);\r\n\r\n        let lockingReleaseTime = await stakingContract.lockingReleaseTime(account);\r\n        lockingReleaseTime = formatUnits(lockingReleaseTime, 0);\r\n        if (Number(lockingReleaseTime) > 0) {\r\n          lockingReleaseTime = new Date(Number(lockingReleaseTime) * 1000);\r\n          var year = lockingReleaseTime.getFullYear();\r\n          var month = (\"0\" + (lockingReleaseTime.getMonth() + 1)).slice(-2);\r\n          var day = (\"0\" + lockingReleaseTime.getDate()).slice(-2);\r\n          var formattedDate = `${year}-${month}-${day}`;\r\n          lockingReleaseTime = formattedDate;\r\n        } else {\r\n          lockingReleaseTime = \"~\"\r\n        }\r\n\r\n        setData({\r\n          ...data,\r\n          token_decimal: decimals,\r\n          lockingReleaseTime,\r\n        });\r\n      } catch (error) {\r\n        console.log(error.message)\r\n      }\r\n    })();\r\n\r\n  }, [account, stakingContract, tokenContract]);\r\n\r\n  const handleStake = async () => {\r\n    console.log(data)\r\n    var bignumber_staking_amount = parseUnits(String(data.staking_amount), data.token_decimal);\r\n    // check allowance\r\n    try {\r\n      const allowance = await tokenContract.allowance(account, stakingpool_address);\r\n      if (allowance.lt(bignumber_staking_amount)) {\r\n        const tx = await tokenContract.approve(stakingpool_address, bignumber_staking_amount);\r\n        let result = await tx.wait();\r\n        if (result.confirmations > 1) {\r\n          const tx = await stakingContract.stake(bignumber_staking_amount);\r\n          await tx.wait();\r\n\r\n          await apis.updateUserStaking({\r\n            staking_address: stakingpool_address,\r\n            wallet_address: account,\r\n            changing_amount: Number(data.staking_amount)\r\n          });\r\n\r\n          window.location.reload()\r\n        }\r\n      } else {\r\n        const tx = await stakingContract.stake(bignumber_staking_amount);\r\n        await tx.wait();\r\n\r\n        await apis.updateUserStaking({\r\n          staking_address: stakingpool_address,\r\n          wallet_address: account,\r\n          changing_amount: Number(data.staking_amount)\r\n        });\r\n\r\n        window.location.reload()\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleUnstake = async () => {\r\n    console.log(data)\r\n    try {\r\n      if (new Date(data.lockingReleaseTime).getTime() > Date.now()) {\r\n        if (window.confirm(\"Unstaking before locktime(\" + data.lockingReleaseTime + \") can be take fee upto 25%. Are you ok?\")) {\r\n\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      const tx = await stakingContract.withdraw(parseUnits(String(data.unstaking_amount), data.token_decimal));\r\n      await tx.wait();\r\n\r\n      await apis.updateUserStaking({\r\n        staking_address: stakingpool_address,\r\n        wallet_address: account,\r\n        changing_amount: 0 - Number(data.unstaking_amount)\r\n      });\r\n\r\n      window.location.reload()\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleHarvest = async () => {\r\n    try {\r\n      const tx = await stakingContract.getReward();\r\n      await tx.wait();\r\n      window.location.reload()\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: '50px 70px 60px 70px',\r\n        width: '57%',\r\n        '@media (max-width: 1260px)': {\r\n          width: '100%'\r\n        }\r\n      }}\r\n    >\r\n      <Box sx={{ display: 'flex', justifyContent: 'right', marginBottom: '50px' }}>\r\n        <RoundedLabel keyword=\"Balance\" value={`$SHMX ${Number(wallet_balance).toFixed(3)}`} bgColor=\"#171717\" />\r\n      </Box>\r\n      <SubmitInput size={26} btnValue=\"Stake\"\r\n        value={data.staking_amount}\r\n        onClick={() => handleStake()}\r\n        onChangeValue={(value) => setData({ ...data, staking_amount: value })}\r\n      />\r\n      <SubmitInput size={26} btnValue=\"Unstake\" sx={{ marginTop: '60px' }}\r\n        value={data.unstaking_amount}\r\n        onClick={() => handleUnstake()}\r\n        onChangeValue={(value) => setData({ ...data, unstaking_amount: value })}\r\n      />\r\n      <Box sx={{ marginTop: '40px' }}>\r\n        <Label text={{ value: '$SHMX', color: 'green', weight: 100 }} />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            '@media (max-width: 500px)': {\r\n              flexDirection: 'column',\r\n              rowGap: '25px'\r\n            }\r\n          }}\r\n        >\r\n          <Label sx={{ marginTop: '10px', marginRight: '40px' }} text={{ size: 40, value: Number(reward_amount).toFixed(4) }} />\r\n          <PrimaryButton label=\"Harvest\" hasFocus={true} sx={{ width: '200px' }} onClick={() => handleHarvest()} />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RightStaking;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport LeftStaking from './LeftStaking';\r\nimport RightStaking from './RightStaking';\r\n\r\nfunction MainStaking() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        '@media (max-width: 600px)': {\r\n          padding: '60px 2%'\r\n        },\r\n        position: 'unset',\r\n        padding: '60px 8%'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          '@media (max-width: 1260px)': {\r\n            flexDirection: 'column'\r\n          },\r\n          backgroundImage: 'url(\"_img/staking/background.png\")',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n          backgroundSize: 'cover',\r\n          borderRadius: '38px',\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <LeftStaking />\r\n        <RightStaking />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MainStaking;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Box, Paper, InputBase, IconButton } from '@mui/material';\r\nimport { Label } from 'components/_components/Label';\r\nimport { RoundedLabel } from 'components/_components/Label';\r\nimport { PrimaryButton } from 'components/_components/Button';\r\n\r\nimport { useLiquidStakingStatus } from 'hooks/useMyStatus';\r\n\r\nconst RenderRoundedCard = (props) => (\r\n  <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        borderRadius: '7px',\r\n        width: '120px',\r\n        minHeight: '43px',\r\n        backgroundColor: '#02FF7B',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      <Label text={{ ...props.label }} />\r\n    </Box>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '@media (max-width: 500px)': {\r\n          flexDirection: 'column',\r\n          alignItems: 'start'\r\n        }\r\n      }}\r\n    >\r\n      <Label text={props.value} sx={{ marginTop: '5px' }} />\r\n      {props.id === 2 && (\r\n        <Button\r\n          sx={{\r\n            fontSize: '15px',\r\n            width: '120px',\r\n            height: '52px',\r\n            backgroundColor: '#171717',\r\n            color: 'white',\r\n            border: '1px solid #02FF7B',\r\n            borderRadius: '8px',\r\n            marginLeft: '35px',\r\n            '@media (max-width: 500px)': {\r\n              marginLeft: '0px',\r\n              marginTop: '10px'\r\n            }\r\n          }}\r\n          onClick={props.funcClaimRewards}\r\n        >\r\n          Harvest\r\n        </Button>\r\n      )}\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nfunction LiquidStaking() {\r\n  const { staked_amount, received_amount, rewards,\r\n    wallet_SHMX_balance, wallet_sSHMX_balance, sSHMX_marketcap,\r\n    totalStakedSHMX, totalStakers,\r\n    funcStake, funcUnstake, funcClaimRewards } = useLiquidStakingStatus();\r\n\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  var LiquidParams = {\r\n    labels: [\r\n      {\r\n        label: {\r\n          value: 'You will receive',\r\n          weight: 100\r\n        },\r\n        value: {\r\n          value: amount + ' sSHMX',\r\n          color: 'grey',\r\n          weight: 100\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'Exchange Rate',\r\n          weight: 100\r\n        },\r\n        value: {\r\n          value: '1 SHMX = 1 sSHMX',\r\n          color: 'grey',\r\n          weight: 100\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'Transaction Cost',\r\n          weight: 100\r\n        },\r\n        value: {\r\n          value: '- $0.12',\r\n          color: 'grey',\r\n          weight: 100\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'Reward Fee',\r\n          weight: 100,\r\n          img: '_img/icon/info.png'\r\n        },\r\n        value: {\r\n          value: '10%',\r\n          color: 'grey',\r\n          weight: 100\r\n        }\r\n      }\r\n    ],\r\n    items: [\r\n      {\r\n        label: {\r\n          value: 'Staked',\r\n          size: 18,\r\n          color: '#26323E'\r\n        },\r\n        value: {\r\n          value: Number(staked_amount).toFixed(1) + ' SHMX',\r\n          size: 40\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'Received',\r\n          size: 18,\r\n          color: '#26323E'\r\n        },\r\n        value: {\r\n          value: Number(received_amount).toFixed(1) + ' sSHMX',\r\n          size: 40\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'Rewards',\r\n          size: 18,\r\n          color: '#26323E'\r\n        },\r\n        value: {\r\n          value: Number(rewards).toFixed(3) + ' sSHMX',\r\n          size: 40\r\n        }\r\n      }\r\n    ],\r\n    values: [\r\n      {\r\n        label: {\r\n          value: 'Annual Percentage Rate',\r\n          weight: 100\r\n        },\r\n        value: {\r\n          value: '6%',\r\n          color: 'grey',\r\n          weight: 100\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'Total Staked',\r\n          weight: 100\r\n        },\r\n        value: {\r\n          value: totalStakedSHMX + ' SHMX',\r\n          color: 'grey',\r\n          weight: 100\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'Total Stakers',\r\n          weight: 100\r\n        },\r\n        value: {\r\n          value: totalStakers,\r\n          color: 'grey',\r\n          weight: 100\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'sSHMX Marketcap',\r\n          weight: 100\r\n        },\r\n        value: {\r\n          value: '$ ' + sSHMX_marketcap,\r\n          color: 'grey',\r\n          weight: 100\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const handleStake = async () => {\r\n    try {\r\n      await funcStake(amount)\r\n    } catch (e) {\r\n      console.log(e.message)\r\n    }\r\n\r\n  }\r\n  const handleUnstake = async () => {\r\n    try {\r\n      await funcUnstake(amount)\r\n    } catch (e) {\r\n      console.log(e.message)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-evenly',\r\n          padding: '50px 50px',\r\n          backgroundColor: '#000000',\r\n          border: '1px solid #7070704C',\r\n          borderRadius: '20px',\r\n          flexWrap: 'wrap',\r\n          rowGap: '25px',\r\n          '@media (max-width: 500px)': {\r\n            flexDirection: 'column'\r\n          }\r\n        }}\r\n      >\r\n        {LiquidParams.items.map((item, idx) => (\r\n          <RenderRoundedCard key={idx} {...item} id={idx} funcClaimRewards={funcClaimRewards} />\r\n        ))}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          marginTop: '40px',\r\n          paddingBottom: '50px',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n          backgroundColor: '#000000'\r\n        }}\r\n      >\r\n        <Label sx={{ marginTop: '60px' }} text={{ value: 'Stake SHMX', size: 40, color: 'green' }} />\r\n        <Label\r\n          sx={{ marginTop: '10px' }}\r\n          text={{ value: 'Stake SHMX & Receive sSHMX While Staking', color: 'grey', size: 18, weight: 100 }}\r\n        />\r\n        <Box\r\n          sx={{\r\n            width: '600px',\r\n            '@media (max-width: 760px)': {\r\n              width: '100%'\r\n            }\r\n          }}\r\n        >\r\n          {/* Stake Input */}\r\n          <Paper\r\n            component=\"form\"\r\n            sx={{\r\n              p: '2px 13px',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '50px',\r\n              marginBottom: '10px',\r\n              border: '1px solid #02FF7B',\r\n              backgroundColor: '#171717',\r\n              height: '96px'\r\n            }}\r\n          >\r\n            <IconButton sx={{ p: '10px' }} disabled>\r\n              <img src=\"_img/icon/shmx.png\" alt=\"hello\" width={50} />\r\n            </IconButton>\r\n            <InputBase\r\n              sx={{ ml: 1, flex: 1, fontSize: '26px', fontWeight: 700 }}\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value.replace(/[^0-9.]/g, \"\"))}\r\n            />\r\n            <Button\r\n              sx={{\r\n                width: '140px',\r\n                height: '70px',\r\n                backgroundColor: '#000000',\r\n                borderRadius: '8px',\r\n                border: '1px solid #7070704D',\r\n                color: 'white',\r\n                fontSize: 20\r\n              }}\r\n              onClick={() => setAmount(wallet_SHMX_balance)}\r\n            >\r\n              MAX\r\n            </Button>\r\n          </Paper>\r\n\r\n          <Box sx={{ display: 'flex', justifyContent: 'end' }}>\r\n            <RoundedLabel keyword=\"Balance\" value={\"$SHMX \" + Number(wallet_SHMX_balance).toFixed(1)} bgColor=\"#171717\" />\r\n          </Box>\r\n          <PrimaryButton\r\n            sx={{\r\n              marginTop: '30px',\r\n              width: '100%',\r\n              minHeight: '85px',\r\n              fontSize: '24px !important'\r\n            }}\r\n            label=\"Stake\"\r\n            hasFocus\r\n            onClick={handleStake}\r\n          />\r\n          <PrimaryButton\r\n            sx={{\r\n              marginTop: '10px',\r\n              marginBottom: '52px',\r\n              width: '100%',\r\n              minHeight: '85px',\r\n              fontSize: '24px !important'\r\n            }}\r\n            label=\"Unstake\"\r\n            hasFocus\r\n            onClick={handleUnstake}\r\n          />\r\n          {LiquidParams.labels.map((val, idx) => (\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '22px' }}>\r\n              <Label text={{ ...val.label }} />\r\n              <Label text={{ ...val.value }} />\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          backgroundColor: '#0A1610',\r\n          padding: '18px 0px 40px 0px',\r\n          display: 'flex',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '600px',\r\n            '@media (max-width: 760px)': {\r\n              width: '100%'\r\n            }\r\n          }}\r\n        >\r\n          {LiquidParams.values.map((val, idx) => (\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '22px' }}>\r\n              <Label text={{ ...val.label }} />\r\n              <Label text={{ ...val.value }} />\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LiquidStaking;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport { Label, RoundedLabel } from 'components/_components/Label';\r\nimport { SubmitInput } from 'components/_components/Input';\r\nimport { PrimaryButton } from 'components/_components/Button';\r\nimport { RoundedCard } from 'components/_components/Card';\r\nimport Pagination from 'components/_components/Pagination';\r\nimport { StakingButtons, LiquidParams } from 'utils/_utils/EntityFieldDefs';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { formatUnits, parseUnits } from '@ethersproject/units';\r\nimport apis from 'services';\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\r\nimport { useStakingContract, useTokenContract } from 'hooks/useContract';\r\nimport LiquidStaking from './LiquidStaking';\r\n\r\nconst RenderElements = ({ poolInfo, idx, expanded, setExpanded }) => {\r\n  const { account } = useActiveWeb3React();\r\n  const tokenContract = useTokenContract(poolInfo.tokenAddress);\r\n  const stakingContract = useStakingContract(poolInfo.address);\r\n  const [data, setData] = useState({\r\n    token_decimal: 0,\r\n    wallet_balance: 0,\r\n    staked: 0,\r\n    rewards: 0,\r\n    staking_amount: 0, //input data\r\n    unstaking_amount: 0, //input data\r\n    tvl: 0, //pool information\r\n    lockingReleaseTime: '', //user information\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const wallet_balance = await tokenContract.balanceOf(account);\r\n        const pool_tvl = await stakingContract._totalSupply();\r\n        const decimals = await tokenContract.decimals();\r\n        const staked = await stakingContract.balances(account);\r\n        const rewards = await stakingContract.earned(account);\r\n\r\n        let lockingReleaseTime = await stakingContract.lockingReleaseTime(account);\r\n        lockingReleaseTime = formatUnits(lockingReleaseTime, 0);\r\n        if (Number(lockingReleaseTime) > 0) {\r\n          lockingReleaseTime = new Date(Number(lockingReleaseTime) * 1000);\r\n          var year = lockingReleaseTime.getFullYear();\r\n          var month = (\"0\" + (lockingReleaseTime.getMonth() + 1)).slice(-2);\r\n          var day = (\"0\" + lockingReleaseTime.getDate()).slice(-2);\r\n          var formattedDate = `${year}-${month}-${day}`;\r\n          lockingReleaseTime = formattedDate;\r\n        } else {\r\n          lockingReleaseTime = \"~\"\r\n        }\r\n\r\n\r\n        setData({\r\n          ...data,\r\n          token_decimal: decimals,\r\n          wallet_balance: formatUnits(wallet_balance, decimals),\r\n          staked: formatUnits(staked, decimals),\r\n          rewards: Number(formatUnits(rewards, decimals)).toFixed(3),\r\n          tvl: formatUnits(pool_tvl, decimals),\r\n          lockingReleaseTime,\r\n        });\r\n\r\n      } catch (error) {\r\n        console.log(error.message)\r\n      }\r\n    })();\r\n\r\n  }, [account, poolInfo, tokenContract]);\r\n\r\n  var componentInfo = {\r\n    imgUrl: poolInfo.logo,\r\n    value: {\r\n      value: `$${poolInfo.tokenName.substring(0, 10)}`,\r\n      size: 30\r\n    },\r\n    label: {\r\n      bgColor: '#171717',\r\n      label: `$${poolInfo.tokenSymbol.substring(0, 5)} / ${poolInfo.tokenSymbol.substring(0, 5)}`,\r\n      color: 'green',\r\n      size: 20,\r\n      width: 197,\r\n      height: 43\r\n    },\r\n    items: [\r\n      {\r\n        label: {\r\n          value: 'Your Staked',\r\n          color: 'grey',\r\n          size: 22,\r\n          height: 100\r\n        },\r\n        value: {\r\n          value: data.staked,\r\n          size: 26,\r\n          height: 100\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'Duration',\r\n          color: 'grey',\r\n          size: 22,\r\n          height: 100\r\n        },\r\n        value: {\r\n          value: `${poolInfo.lockingdays} days`,\r\n          size: 26,\r\n          height: 100\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'APR',\r\n          color: 'grey',\r\n          size: 22,\r\n          height: 100\r\n        },\r\n        value: {\r\n          value: poolInfo.rewardRate * 12 + '%',\r\n          size: 26,\r\n          height: 100\r\n        },\r\n        img: {\r\n          imgUrl: '_img/icon/increased.png',\r\n          size: 16\r\n        }\r\n      },\r\n      {\r\n        label: {\r\n          value: 'TVL',\r\n          color: 'grey',\r\n          size: 22,\r\n          height: 100\r\n        },\r\n        value: {\r\n          value: data.tvl,\r\n          size: 26,\r\n          height: 100\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const handleStake = async () => {\r\n    console.log(data)\r\n    var bignumber_staking_amount = parseUnits(String(data.staking_amount), data.token_decimal);\r\n    // check allowance\r\n    try {\r\n      const allowance = await tokenContract.allowance(account, poolInfo.address);\r\n      if (allowance.lt(bignumber_staking_amount)) {\r\n        const tx = await tokenContract.approve(poolInfo.address, bignumber_staking_amount);\r\n        let result = await tx.wait();\r\n        if (result.confirmations > 1) {\r\n          const tx = await stakingContract.stake(bignumber_staking_amount);\r\n          await tx.wait();\r\n\r\n          await apis.updateUserStaking({\r\n            staking_address: poolInfo.address,\r\n            wallet_address: account,\r\n            changing_amount: Number(data.staking_amount)\r\n          });\r\n\r\n          window.location.reload()\r\n        }\r\n      } else {\r\n        const tx = await stakingContract.stake(bignumber_staking_amount);\r\n        await tx.wait();\r\n\r\n        await apis.updateUserStaking({\r\n          staking_address: poolInfo.address,\r\n          wallet_address: account,\r\n          changing_amount: Number(data.staking_amount)\r\n        });\r\n\r\n        window.location.reload()\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleUnstake = async () => {\r\n    console.log(data)\r\n    try {\r\n      if (new Date(data.lockingReleaseTime).getTime() > Date.now()) {\r\n        if (window.confirm(\"Unstaking before locktime can be take fee upto 25%. Are you ok?\")) {\r\n\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      const tx = await stakingContract.withdraw(parseUnits(String(data.unstaking_amount), data.token_decimal));\r\n      await tx.wait();\r\n\r\n      await apis.updateUserStaking({\r\n        staking_address: poolInfo.address,\r\n        wallet_address: account,\r\n        changing_amount: 0 - Number(data.unstaking_amount)\r\n      });\r\n\r\n      window.location.reload()\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleHarvest = async () => {\r\n    try {\r\n      const tx = await stakingContract.getReward();\r\n      await tx.wait();\r\n      window.location.reload()\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      key={idx}\r\n      sx={{\r\n        padding: '35px 30px 35px 60px',\r\n        backgroundColor: '#000000',\r\n        border: '1px solid #7070704C',\r\n        borderRadius: '20px',\r\n        position: 'relative'\r\n      }}\r\n    >\r\n      <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            '@media (max-width: 600px)': {\r\n              flexDirection: 'column'\r\n            }\r\n          }}\r\n        >\r\n          <img src={componentInfo.imgUrl} width={100} height={100} alt=\"coin\" />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              marginLeft: '30px',\r\n              '@media (max-width: 600px)': {\r\n                marginLeft: '0px'\r\n              }\r\n            }}\r\n          >\r\n            <Label text={componentInfo.value} sx={{ marginBottom: '8px' }} />\r\n            <RoundedCard {...componentInfo.label} />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            width: '70%',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            '@media (max-width: 1500px)': {\r\n              width: '100%'\r\n            },\r\n            '@media (max-width: 600px)': {\r\n              flexDirection: 'column'\r\n            }\r\n          }}\r\n        >\r\n          {componentInfo.items.map((item, idx) => (\r\n            <Box\r\n              key={idx}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                '@media (max-width: 600px)': {\r\n                  marginTop: '20px'\r\n                }\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  height: '70%',\r\n                  '@media (max-width: 600px)': {\r\n                    height: '100%'\r\n                  }\r\n                }}\r\n              >\r\n                <Label\r\n                  text={item.label}\r\n                  sx={{\r\n                    textAlign: 'center',\r\n                    '@media (max-width: 600px)': {\r\n                      textAlign: 'start'\r\n                    }\r\n                  }}\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    '@media (max-width: 600px)': {\r\n                      justifyContent: 'start'\r\n                    }\r\n                  }}\r\n                >\r\n                  <Label text={item.value} />\r\n                  {item.img && (\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <img src={item.img.imgUrl} width={16} height={16} alt=\"img\" style={{ marginLeft: '10px' }} />\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: '#171717',\r\n              width: '44px',\r\n              height: '44px',\r\n              padding: '0px',\r\n              minWidth: '44px',\r\n              position: 'absolute',\r\n              right: '30px',\r\n              top: '30px'\r\n            }}\r\n            onClick={() =>\r\n              setExpanded(\r\n                expanded.map((value, index) => {\r\n                  if (index === idx) {\r\n                    return !value;\r\n                  }\r\n                  return value;\r\n                })\r\n              )\r\n            }\r\n          >\r\n            {!expanded[idx] && <ExpandMoreIcon sx={{ color: 'white' }} />}\r\n            {expanded[idx] && <ExpandLessIcon sx={{ color: 'white' }} />}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      {expanded[idx] && (\r\n        <Box\r\n          sx={{\r\n            margin: '35px -30px 0px -60px',\r\n            paddingTop: '50px',\r\n            borderTop: '1px solid #002B15'\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              columnGap: '35px',\r\n              rowGap: '25px',\r\n              padding: '0px 30px',\r\n              justifyContent: 'space-between',\r\n              flexWrap: 'wrap'\r\n            }}\r\n          >\r\n            <SubmitInput\r\n              sx={{\r\n                width: '30%',\r\n                minWidth: '330px',\r\n                '@media (max-width: 1000px)': {\r\n                  width: '100%',\r\n                  minWidth: 'fit-content'\r\n                }\r\n              }}\r\n              size={38}\r\n              btnValue=\"Harvest\"\r\n              label={`$${poolInfo.tokenSymbol}`}\r\n              value={data.rewards}\r\n              onClick={() => handleHarvest()}\r\n              readOnly={true}\r\n            />\r\n            <SubmitInput\r\n              sx={{\r\n                width: '30%',\r\n                minWidth: '330px',\r\n                '@media (max-width: 1000px)': {\r\n                  width: '100%',\r\n                  minWidth: 'fit-content'\r\n                }\r\n              }}\r\n              size={26}\r\n              btnValue=\"Stake\"\r\n              label={`$${poolInfo.tokenSymbol}`}\r\n              value={data.staking_amount}\r\n              onClick={() => handleStake()}\r\n              onChangeValue={(value) => setData({ ...data, staking_amount: value })}\r\n            />\r\n            <SubmitInput\r\n              sx={{\r\n                width: '30%',\r\n                minWidth: '330px',\r\n                '@media (max-width: 1000px)': {\r\n                  width: '100%',\r\n                  minWidth: 'fit-content'\r\n                }\r\n              }}\r\n              size={26}\r\n              btnValue=\"Unstake\"\r\n              label={`$${poolInfo.tokenSymbol}`}\r\n              value={data.unstaking_amount}\r\n              onClick={() => handleUnstake()}\r\n              onChangeValue={(value) => setData({ ...data, unstaking_amount: value })}\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              columnGap: '35px',\r\n              rowGap: '25px',\r\n              padding: '5px 30px',\r\n            }}\r\n          >\r\n            <span>Your wallet {poolInfo.tokenSymbol} balance: {data.wallet_balance}</span>\r\n            <br />\r\n            <span>Your Lock time: {data.lockingReleaseTime}.  Harvesting will reset the lock time.</span>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nfunction PriceStaking() {\r\n  const [activeId, setActiveId] = useState(0); //tab selected\r\n  const [expanded, setExpanded] = useState(Array(5).fill(false));\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { account } = useActiveWeb3React();\r\n\r\n  const [pools, SetPools] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await apis.getStakingPools({});\r\n        if (response.data) {\r\n          SetPools(response.data.data);\r\n        } else {\r\n          enqueueSnackbar('failed', {\r\n            variant: 'danger'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        enqueueSnackbar('Oops, Something went wrong!', {\r\n          variant: 'error'\r\n        });\r\n      }\r\n    })();\r\n  }, [account]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundImage: 'url(\"_img/projects/background.png\")',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        marginTop: '80px',\r\n        position: 'relative',\r\n        '@media (max-width: 600px)': {\r\n          padding: '60px 2%'\r\n        },\r\n        padding: '60px 8%'\r\n      }}\r\n    >\r\n      <img\r\n        src=\"_img/projects/dot.png\"\r\n        alt=\"dot\"\r\n        style={{ position: 'absolute', top: '35px', left: '35px', width: '67px' }}\r\n      />\r\n      <img\r\n        src=\"_img/projects/dot2.png\"\r\n        alt=\"dot\"\r\n        style={{\r\n          position: 'absolute',\r\n          bottom: '927px',\r\n          left: '-37px',\r\n          width: '115px',\r\n          filter: 'blur(6px)'\r\n        }}\r\n      />\r\n      <img\r\n        src=\"_img/projects/dot3.png\"\r\n        alt=\"dot\"\r\n        style={{\r\n          position: 'absolute',\r\n          bottom: '882px',\r\n          right: '46px',\r\n          width: '105px',\r\n          height: '90px',\r\n          filter: 'blur(30px)'\r\n        }}\r\n      />\r\n      <img\r\n        src=\"_img/projects/dot4.png\"\r\n        alt=\"dot\"\r\n        style={{ position: 'absolute', bottom: '40px', right: '100px', width: '89px' }}\r\n      />\r\n      <Box>\r\n        <Box sx={{ marginTop: '10px' }}>\r\n          <Stack flexWrap=\"wrap\" flexDirection=\"row\" columnGap=\"28px\" rowGap=\"15px\">\r\n            {StakingButtons.map((but, idx) => (\r\n              <PrimaryButton\r\n                key={idx}\r\n                label={but}\r\n                sx={{ padding: '20px 43px 20px 43px', color: '#585858' }}\r\n                onClick={() => setActiveId(idx)}\r\n                hasFocus={activeId === idx}\r\n              />\r\n            ))}\r\n          </Stack>\r\n        </Box>\r\n        <Box sx={{ marginTop: '60px' }}>\r\n          {/* Staking */}\r\n          {(activeId === 0) && (\r\n            <Box sx={{ display: 'flex', rowGap: '20px', flexDirection: 'column' }}>\r\n              {pools.map((pool, idx) =>\r\n                <RenderElements poolInfo={pool} idx={idx} expanded={expanded} setExpanded={setExpanded} />\r\n              )}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Farming */}\r\n          {(activeId === 1) && (\r\n            <></>\r\n          )}\r\n\r\n          {/* Liquid Staking */}\r\n          {activeId === 2 && <LiquidStaking />}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PriceStaking;\r\n","import React from 'react';\r\nimport MainStaking from \"./MainStaking\"\r\nimport PriceStaking from \"./PriceStaking\"\r\n\r\nconst StakingPage = () => {\r\n  return(\r\n    <div>\r\n      <MainStaking />\r\n      <PriceStaking />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StakingPage;\r\n"],"names":["RoundedCard","props","img","bgColor","label","width","height","color","size","_jsxs","Box","sx","display","alignItems","borderRadius","backgroundColor","marginTop","justifyContent","children","_jsx","src","alt","style","marginRight","Label","text","value","weight","ProjectCard","_ref","_project$ipfs","_project$ipfs2","_project$ipfs3","_project$ipfs4","project","navigate","useNavigate","percent","Number","weiRaised","hardCap","toFixed","maxWidth","padding","border","cursor","onClick","concat","address","flexDirection","poster","projectName","paddingLeft","description","marginBottom","presaleRate","backgroundImage","backgroundRepeat","backgroundSize","margin","LinearProgressBar","SecondaryButton","privacy","IconButtonGroup","elements","path","ipfs","website","twitter","telegram","discord","SearchInput","TextField","placeholder","InputProps","startAdornment","InputAdornment","position","SearchIcon","fontWeight","fontSize","SubmitInput","_ref$label","btnValue","onChangeValue","readOnly","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_objectSpread","background","type","onChange","e","target","fontFamily","top","left","PrimaryButton","right","hasFocus","id","setCurId","count","setCount","_useState3","_useState4","prevString","setPrevString","_useState5","_useState6","nextString","setNextString","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","disabled","columnGap","Array","fill","map","_","idx","marginLeft","BorderLinearProgress","styled","LinearProgress","_ref2","theme","_defineProperty","linearProgressClasses","GreyBorderLinearProgress","_ref3","_ref4","_ref5","variant","tierimg","_useMainStakingStatus","useMainStakingStatus","tier","staked_amount","reward_amount","TIER_LEVEL","Staking","icon","details","imgUrl","minWidth","rowGap","detail","tokenContract","useProjectMainTokenContract","stakingContract","useMainStakingContract","account","useActiveWeb3React","stakingpool_address","setStakingPoolAddress","wallet_balance","setWalletBalance","token_decimal","staking_amount","unstaking_amount","lockingReleaseTime","data","setData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decimals","_wallet_balance","year","month","day","formattedDate","wrap","_context","prev","next","sent","balanceOf","formatUnits","Date","getFullYear","getMonth","slice","getDate","t0","console","log","message","stop","handleStake","_callee2","bignumber_staking_amount","tx","_tx","_tx2","_context2","parseUnits","String","allowance","lt","approve","wait","confirmations","stake","apis","staking_address","wallet_address","changing_amount","location","reload","abrupt","apply","arguments","handleUnstake","_callee3","_context3","getTime","now","confirm","withdraw","handleHarvest","_callee4","_context4","getReward","RoundedLabel","keyword","backgroundPosition","LeftStaking","RightStaking","RenderRoundedCard","minHeight","Button","funcClaimRewards","_useLiquidStakingStat","useLiquidStakingStatus","received_amount","rewards","wallet_SHMX_balance","sSHMX_marketcap","wallet_sSHMX_balance","totalStakedSHMX","totalStakers","funcStake","funcUnstake","amount","setAmount","LiquidParams","labels","items","values","flexWrap","item","paddingBottom","Paper","component","p","IconButton","InputBase","ml","flex","replace","val","RenderElements","poolInfo","expanded","setExpanded","useTokenContract","tokenAddress","useStakingContract","staked","tvl","pool_tvl","_totalSupply","balances","earned","componentInfo","logo","tokenName","substring","tokenSymbol","lockingdays","rewardRate","textAlign","index","ExpandMoreIcon","ExpandLessIcon","paddingTop","borderTop","activeId","setActiveId","enqueueSnackbar","useSnackbar","_useState7","_useState8","pools","SetPools","_callee5","response","_context5","bottom","filter","Stack","StakingButtons","but","pool","_Fragment","LiquidStaking","MainStaking","PriceStaking"],"sourceRoot":""}