{"version":3,"file":"static/js/5026.d5305b07.chunk.js","mappings":"+SAEIA,GAAa,EAcjB,EAJoCC,EAAAA,YAAiB,WAEnD,OAVKD,IACHE,QAAQC,KAAK,CAAC,wFAAyF,GAAI,wEAAyE,2EAA4E,GAAI,uGAAuGC,KAAK,OAChXJ,GAAa,GAQR,IACT,I,g8gBCqBmBK,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAmB,SAAAE,GAAA,IAAGC,EAAKD,EAALC,MAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzCD,EAAME,WAAWC,WAAS,IAC7BC,OAAQ,GACRC,MAAO,UACPC,SAAU,SACVC,gBAAiB,EACjBC,QAAS,cACTC,gBAAiB,YAAU,IAKd,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjBC,GAA6BC,EAAAA,EAAAA,KAArBC,EAAOF,EAAPE,QAASC,EAAOH,EAAPG,QACXC,EAAgB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,YAGxBC,IAFgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,QAAQC,OAAO,KAElCC,EAAAA,EAAAA,UAAS,KAAGC,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GAA/BQ,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwBT,EAAAA,EAAAA,UAAS,mCAAkCU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5DE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAsCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAoCjB,EAAAA,EAAAA,UAAS,GAAEkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA4BrB,EAAAA,EAAAA,UAAS,KAAKsB,IAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAnCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,IAAsCzB,EAAAA,EAAAA,UAAS,IAAG0B,IAAAxB,EAAAA,EAAAA,GAAAuB,GAAA,GAA3CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAAwB7B,EAAAA,EAAAA,UAAS,IAAI8B,KAAKA,KAAKC,QAAOC,IAAA9B,EAAAA,EAAAA,GAAA2B,GAAA,GAA/CI,GAAID,GAAA,GAAEE,GAAOF,GAAA,GAEdG,IAAgBC,EAAAA,EAAAA,IAAiBjC,GACvCkC,IAAkCrC,EAAAA,EAAAA,WAAS,GAAMsC,IAAApC,EAAAA,EAAAA,GAAAmC,GAAA,GAA1CE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAoCzC,EAAAA,EAAAA,WAAS,GAAM0C,IAAAxC,EAAAA,EAAAA,GAAAuC,GAAA,GAA5CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GACxBG,IAAoBC,EAAAA,EAAAA,MAApBD,gBAERE,KADqBC,EAAAA,EAAAA,OACahD,EAAAA,EAAAA,UAAS,CACzCiD,KAAM,GACNC,OAAQ,GACRC,SAAU,EACVC,YAAa,EACbC,UAAW,KACXC,IAAApD,EAAAA,EAAAA,GAAA6C,GAAA,GANKQ,GAASD,GAAA,GAAEE,GAAYF,GAAA,IAO9BG,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAY,EAyChB,OAxCAlB,IAAa,GACbhC,EAAc,KACdmD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAb,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAO,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAEgB,IAAT9D,EAAW,CAAA6D,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACM/B,GAAcc,OAAO,KAAD,EAA7B,OAAJA,EAAIe,EAAAG,KAAAH,EAAAE,KAAA,EACW/B,GAAce,SAAS,KAAD,EAA/B,OAANA,EAAMc,EAAAG,KAAAH,EAAAE,KAAA,GACW/B,GAAcgB,WAAW,KAAD,GAAjC,OAARA,EAAQa,EAAAG,KAAAH,EAAAE,KAAA,GACY/B,GAAciB,cAAc,KAAD,GAApC,OAAXA,EAAWY,EAAAG,KAAAH,EAAAE,KAAA,GACO/B,GAAckB,UAAU7D,GAAS,KAAD,GAAlD6D,EAASW,EAAAG,KACVT,GACHF,GAAa,CAAEP,KAAAA,EAAMC,OAAAA,EAAQE,YAAAA,EAAaD,SAAAA,EAAUE,UAAAA,IACrDW,EAAAE,KAAA,iBAEIR,GACHF,GAAa,CACXP,KAAM,GACNC,OAAQ,GACRC,SAAU,EACVC,YAAa,EACbC,UAAW,IAEd,QAAAW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAGH9F,QAAQmG,IAAGL,EAAAI,IACNV,IACHF,GAAa,CACXP,KAAM,GACNC,OAAQ,GACRC,SAAU,EACVC,YAAa,EACbC,UAAW,IAEb7C,EAAc,0BACf,QAEHgC,IAAa,GAAO,yBAAAwB,EAAAM,OAAA,GAAAR,EAAA,kBAnCtBH,GAsCO,WACLD,GAAY,CACd,CACF,GAAG,CAACvB,GAAe3C,IAEnB,IAAM+E,GAAY,eAAAC,GAAAb,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAY,IAAA,IAAAf,EAAA,OAAAE,EAAAA,EAAAA,KAAAG,MAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAiJd,OAhJDR,GAAY,EAChBd,IAAc,IACde,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAc,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAtB,EAAAA,EAAAA,KAAAG,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,YACc,IAAT/D,GAAeoB,GAAS,IAAMoB,GAAU,CAAAwC,EAAAjB,KAAA,SACnB,OAAL,EAAKiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAEA/B,GAAciD,SAAS,KAAD,EAA/BD,EAAAhB,OACc,EAAKgB,EAAAjB,KAAA,gBAAAiB,EAAAlB,KAAA,EAAAkB,EAAAf,GAAAe,EAAA,wBAAAA,EAAAlB,KAAA,GAAAkB,EAAAjB,KAAA,GAIT/B,GAAckB,UAAU7D,GAAS,KAAD,GAAzC,IAAA2F,EAAAhB,KACDkB,IAAGC,EAAAA,EAAAA,IAAWC,OAAOhE,IAASgC,GAAUJ,WAAW,CAADgC,EAAAjB,KAAA,SAI3D,OAHIR,IACH9B,GAAe,sBACfgB,IAAc,IACfuC,EAAAK,OAAA,kBAAAL,EAAAjB,KAAA,iBAOF,OAPEiB,EAAAlB,KAAA,GAAAkB,EAAAM,GAAAN,EAAA,UAIEzB,IACHlD,EAAc,yBACdoC,IAAc,IACfuC,EAAAK,OAAA,kBA+D+E,OA/D/EL,EAAAlB,KAAA,GA8DKY,EAAWa,EAAAA,EACXZ,EAAU,IAAIa,EAAAA,GAAuBC,EAAoBf,EAAUpF,GAAO0F,EAAAjB,KAAA,GACzDY,EAAQe,OAAO1F,EAAOA,EAAOgB,EAAYJ,EAAa+E,EAAAA,IAAa,KAAD,GAE1D,OAFzBf,EAAQI,EAAAhB,KACdjG,QAAQmG,IAAIU,EAASgB,SACrBnB,EAAcG,EAASgB,QAAQZ,EAAAjB,KAAA,GACzBa,EAASiB,kBAAkBC,OAAO,KAAD,GACoB,OAA3D/H,QAAQmG,IAAI,gDAA+Cc,EAAAjB,KAAA,GAE1C/B,GAAc+D,SAAStB,GAAaU,EAAAA,EAAAA,IAAWC,OAAOhE,IAASgC,GAAUJ,WAAW,KAAD,GAA5F,OAAF6B,EAAEG,EAAAhB,KAAAgB,EAAAjB,KAAA,GACFc,EAAGiB,OAAO,KAAD,GAEVvC,IACHlC,GAAU,GACVpB,EAAS,IACTwC,IAAc,IAEhBzD,EAAS,YAAYgG,EAAAjB,KAAA,iBAMpB,OANoBiB,EAAAlB,KAAA,GAAAkB,EAAAgB,GAAAhB,EAAA,UAErBjH,QAAQmG,IAAGc,EAAAgB,IACNzC,IACHlD,EAAc,WACdoC,IAAc,IACfuC,EAAAK,OAAA,kBAMgC,OANhCL,EAAAlB,KAAA,GAMD/F,QAAQmG,IAAI,sBAAqBc,EAAAjB,KAAA,GACVkC,EAAAA,EAAAA,KAAW,kBAADnB,EAAA,CAC/Bc,QAASnB,EACTyB,MAAO7G,EACP8G,aAAcnG,EACdoG,UAAWhD,GAAUN,KACrBuD,YAAajD,GAAUL,SAAMuD,EAAAA,EAAAA,GAAAxB,EAAC,eAChB9E,IAAKsG,EAAAA,EAAAA,GAAAxB,EAAC,aACR9D,IAAUsF,EAAAA,EAAAA,GAAAxB,EAAC,OACjBtE,IAAI8F,EAAAA,EAAAA,GAAAxB,EAAC,cACElE,IAAW0F,EAAAA,EAAAA,GAAAxB,EAAC,MACpB1D,KAAMkF,EAAAA,EAAAA,GAAAxB,EAAC,UACHhD,IAAIgD,IACZ,KAAD,IAZIC,EAAQC,EAAAhB,MAaDuC,MACGxB,EAASwB,KAAKC,QAC5B9D,GAAgB,UAAW,CACzB+D,QAAS,aAGX/D,GAAgB,SAAU,CACxB+D,QAAS,WAEZzB,EAAAjB,KAAA,iBAAAiB,EAAAlB,KAAA,GAAAkB,EAAA0B,GAAA1B,EAAA,UAEDjH,QAAQmG,IAAGc,EAAA0B,IACXhE,GAAgB,8BAA+B,CAC7C+D,QAAS,UACR,yBAAAzB,EAAAb,OAAA,GAAAK,EAAA,yCA3IThB,GA8IKe,EAAAc,OAAA,UACE,WACL9B,GAAY,CACd,IAAC,wBAAAgB,EAAAJ,OAAA,GAAAG,EAAA,KACF,kBArJiB,OAAAD,EAAAsC,MAAA,KAAAC,UAAA,KAuJlB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,eAAcC,UACxBH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACC,SAAS,KAAKC,UAAU,OAAMH,UAIvCI,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,GAAI,CACFC,MAAO,EACPC,EAAG,EACHC,WAAY,UACZC,OAAQ,UACR,UAAW,CACTC,UAAW,SAACtJ,GAAK,OAAKA,EAAMuJ,cAAcC,GAAG,IAE/Cb,SAAA,EAEFH,EAAAA,EAAAA,KAAC1I,EAAAA,EAAU,CAACsI,QAAQ,KAAIO,SAAC,8BACzBH,EAAAA,EAAAA,KAACiB,EAAAA,EAAO,KACRV,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACT,GAAI,CAAEU,GAAI,GAAKC,QAAS,EAAEjB,SAAA,EAC/BH,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,gBACNC,KAAK,OACLC,MAAOC,QAAQnI,GACfoI,WAAYpI,EACZqI,MAAOzI,EACP0I,SAAU,SAACC,GAAC,OAAK1I,EAAS0I,EAAEC,OAAOH,MAAM,EACzCnB,GAAI,CACFC,MAAO,KAGG,GAAbnF,IAECyE,EAAAA,EAAAA,KAACgC,IAAU,CAACnK,MAAM,UAAUoK,KAAM,KACd,IAAlB1F,GAAUN,MACZsE,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACT,GAAI,CAAEyB,UAAW,OAAQC,QAAS,UAAWhC,SAAA,EAClDI,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACkB,UAAU,MAAMC,eAAe,gBAAelC,SAAA,EACnDH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,UACNH,EAAAA,EAAAA,KAAA,QAAAG,SAAO5D,GAAUN,WAEnB+D,EAAAA,EAAAA,KAACiB,EAAAA,EAAO,CAACR,GAAI,CAAE6B,GAAI,IAAKC,YAAa,+BACrChC,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACkB,UAAU,MAAMC,eAAe,gBAAelC,SAAA,EACnDH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,YACNH,EAAAA,EAAAA,KAAA,QAAAG,SAAO5D,GAAUL,aAEnB8D,EAAAA,EAAAA,KAACiB,EAAAA,EAAO,CAACR,GAAI,CAAE6B,GAAI,IAAKC,YAAa,+BACrChC,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACkB,UAAU,MAAMC,eAAe,gBAAelC,SAAA,EACnDH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,kBACNH,EAAAA,EAAAA,KAAA,QAAAG,UAAOqC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAYlG,GAAUH,YAAaG,GAAUJ,iBAE9D6D,EAAAA,EAAAA,KAACiB,EAAAA,EAAO,CAACR,GAAI,CAAE6B,GAAI,IAAKC,YAAa,+BACrChC,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACkB,UAAU,MAAMC,eAAe,gBAAelC,SAAA,EACnDH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,cACNH,EAAAA,EAAAA,KAAA,QAAAG,SAAO5D,GAAUJ,eAEnB6D,EAAAA,EAAAA,KAACiB,EAAAA,EAAO,CAACR,GAAI,CAAE6B,GAAI,IAAKC,YAAa,+BACrChC,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACkB,UAAU,MAAMC,eAAe,gBAAelC,SAAA,EACnDH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,aACNH,EAAAA,EAAAA,KAAA,QAAAG,UAAOqC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAYlG,GAAUF,UAAWE,GAAUJ,mBAI9D,IAEF6D,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,8EACNC,KAAK,SACLC,MAAOC,QAAQ/G,IACfgH,WAAYhH,GACZiH,MAAOrH,GACPsH,SAAU,SAACC,GAAC,OAAKtH,GAAUsH,EAAEC,OAAOH,MAAM,EAC1CnB,GAAI,CACFC,MAAO,MAGXV,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,iBACNK,MAAOjI,EACPkI,SAAU,SAACC,GAAC,OAAKlI,EAAQkI,EAAEC,OAAOH,MAAM,EACxCnB,GAAI,CACFC,MAAO,GAETgC,YAAY,2BAEd1C,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,wBACNK,MAAO7H,EACP8H,SAAU,SAACC,GAAC,OAAK9H,EAAe8H,EAAEC,OAAOH,MAAM,EAC/CnB,GAAI,CACFC,MAAO,GAETgC,YAAY,2BAEd1C,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,cACNC,KAAK,SAGLI,MAAOzH,EACP0H,SAAU,SAACC,GAAC,OAAK1H,EAAc0H,EAAEC,OAAOH,MAAM,EAC9CnB,GAAI,CACFC,MAAO,MAGXV,EAAAA,EAAAA,KAAC2C,EAAc,CACbC,YAAa,SAACC,GAAK,OAAK7C,EAAAA,EAAAA,KAACqB,EAAAA,GAAS5J,EAAAA,EAAAA,GAAA,CAACgJ,GAAI,CAAEC,MAAO,IAASmC,GAAS,EAClEtB,MAAM,cACNK,MAAO3G,GACP4G,SAAU,SAACiB,GACT5H,GAAQ4H,EACV,QAGJ9C,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACT,GAAI,CAAEU,GAAI,GAAK4B,WAAW,SAAS3B,QAAS,EAAEjB,UACnDH,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,CAACf,KAAK,QAAQrC,QAAQ,YAAYU,UAAU,oCAAoC2C,QAAS1F,GAAa4C,SAC1GxE,IAAaqE,EAAAA,EAAAA,KAACgC,IAAU,CAACnK,MAAM,UAAUoK,KAAM,KAAS,wBAOvE,C","sources":["../node_modules/@mui/lab/DateTimePicker/DateTimePicker.js","pages/CreateStake.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nlet warnedOnce = false;\nconst warn = () => {\n  if (!warnedOnce) {\n    console.warn(['MUI: The DateTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.', '', \"You should use `import { DateTimePicker } from '@mui/x-date-pickers'`\", \"or `import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'`\", '', 'More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/.'].join('\\n'));\n    warnedOnce = true;\n  }\n};\n/**\n * @ignore - do not document.\n */\nconst DateTimePicker = /*#__PURE__*/React.forwardRef(function DeprecatedDateTimePicker() {\n  warn();\n  return null;\n});\nexport default DateTimePicker;","import {\r\n  Box,\r\n  Stack,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  Container,\r\n  Alert,\r\n  AlertTitle,\r\n  linearProgressClasses,\r\n  Link\r\n} from '@mui/material';\r\nimport { DateTimePicker } from '@mui/lab';\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTokenContract } from '../hooks/useContract';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router';\r\nimport Page from 'components/Page';\r\nimport { BigNumber } from 'ethers';\r\nimport { formatUnits, parseUnits, commify } from '@ethersproject/units';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useLockContract } from 'hooks/useContract';\r\nimport Loader from 'react-loader-spinner';\r\nimport HashLoader from 'react-spinners/HashLoader';\r\nimport axios from '../utils/axios';\r\nimport { ethers } from 'ethers';\r\nimport STAKE_CONTRACT_BYTECODE from '../config/bytecode/staking.json';\r\nimport STAKE_CONTRACT_ABI from '../config/abi/staking.json';\r\nimport { MAIN_WALLET } from 'config/constants';\r\n\r\nconst TitleStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  height: 44,\r\n  color: 'inherit',\r\n  overflow: 'hidden',\r\n  WebkitLineClamp: 2,\r\n  display: '-webkit-box',\r\n  WebkitBoxOrient: 'vertical'\r\n}));\r\n\r\n// const SERVER_URL = \"https://mintwall.io/uploads\"; // was http://localhost:5000/uploads\r\n\r\nexport default function CreateStake() {\r\n  const navigate = useNavigate();\r\n  // const handleTokenAddress = async (e) => {\r\n  //   setIsParsing(true);\r\n  //   dispatch(setAddress(e.target.value));\r\n  // };\r\n  const { library, account } = useActiveWeb3React();\r\n  const signer = library?.getSigner();\r\n  const network = useSelector((state) => state.network.chainId);\r\n  //input\r\n  const [token, setToken] = useState('');\r\n  const [tokenError, setTokenError] = useState('');\r\n  const [logo, setLogo] = useState('https://snipboard.io/rcMq0f.jpg');\r\n  const [lockingdays, setLockingDays] = useState(56);\r\n  const [rewardRate, setRewardRate] = useState(3);\r\n  const [amount, setAmount] = useState(1000);\r\n  const [amountError, setAmountError] = useState('');\r\n  const [date, setDate] = useState(new Date(Date.now()));\r\n\r\n  const tokenContract = useTokenContract(token);\r\n  const [isParsing, setIsParsing] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const lockContract = useLockContract();\r\n  const [tokenInfo, setTokenInfo] = useState({\r\n    name: '',\r\n    symbol: '',\r\n    decimals: 0,\r\n    totalSupply: 0,\r\n    balanceOf: 0\r\n  });\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    setIsParsing(true);\r\n    setTokenError('');\r\n    (async () => {\r\n      try {\r\n        if (token != '') {\r\n          const name = await tokenContract.name();\r\n          const symbol = await tokenContract.symbol();\r\n          const decimals = await tokenContract.decimals();\r\n          const totalSupply = await tokenContract.totalSupply();\r\n          const balanceOf = await tokenContract.balanceOf(account);\r\n          if (!unmounted) {\r\n            setTokenInfo({ name, symbol, totalSupply, decimals, balanceOf });\r\n          }\r\n        } else {\r\n          if (!unmounted) {\r\n            setTokenInfo({\r\n              name: '',\r\n              symbol: '',\r\n              decimals: 0,\r\n              totalSupply: 0,\r\n              balanceOf: 0\r\n            });\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        if (!unmounted) {\r\n          setTokenInfo({\r\n            name: '',\r\n            symbol: '',\r\n            decimals: 0,\r\n            totalSupply: 0,\r\n            balanceOf: 0\r\n          });\r\n          setTokenError('Invalid token address');\r\n        }\r\n      }\r\n      setIsParsing(false);\r\n    })();\r\n\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [tokenContract, account]);\r\n\r\n  const handleCreate = async () => {\r\n    let unmounted = false;\r\n    setProcessing(true);\r\n    (async () => {\r\n      if (token != '' && amount > 0 && !processing) {\r\n        let isLiquidity = false;\r\n        try {\r\n          const token0 = await tokenContract.token0();\r\n          if (token0) isLiquidity = true;\r\n        } catch (err) { }\r\n        //check wallet balance\r\n        try {\r\n          const balance = await tokenContract.balanceOf(account);\r\n          if (balance.lt(parseUnits(String(amount), tokenInfo.decimals))) {\r\n            if (!unmounted) {\r\n              setAmountError('More than balance!');\r\n              setProcessing(false);\r\n            }\r\n            return;\r\n          }\r\n        } catch (err) {\r\n          if (!unmounted) {\r\n            setTokenError('Invalid token address');\r\n            setProcessing(false);\r\n          }\r\n          return;\r\n        }\r\n        // check allowance\r\n        // try {\r\n        //   const allowance = await tokenContract.allowance(account, LOCK_ADDRESS[network]);\r\n        //   console.log(allowance);\r\n        //   if (allowance.lt(parseUnits(String(amount), tokenInfo.decimals))) {\r\n        //     const tx = await tokenContract.approve(\r\n        //       LOCK_ADDRESS[network],\r\n        //       parseUnits(String(amount), tokenInfo.decimals)\r\n        //     );\r\n        //     await tx.wait();\r\n        //   }\r\n        // } catch (err) {\r\n        //   if (!unmounted) {\r\n        //     setTokenError('Failed in Approving!');\r\n        //     setProcessing(false);\r\n        //   }\r\n        //   return;\r\n        // }\r\n\r\n        //check Date\r\n        // if (new Date(date).getTime() - Date.now() < 10 * 1000) {\r\n        //   enqueueSnackbar('Oops, Lock duration should be longer than 10 minutes!', {\r\n        //     variant: 'error'\r\n        //   });\r\n        //   if (!unmounted) {\r\n        //     setProcessing(false);\r\n        //   }\r\n        //   return;\r\n        // }\r\n\r\n        // add Lock\r\n        // try {\r\n        //   const tx = await lockContract.add(\r\n        //     token,\r\n        //     new Date(date).getTime() / 1000,\r\n        //     parseUnits(String(amount), tokenInfo.decimals),\r\n        //     account,\r\n        //     isLiquidity\r\n        //   );\r\n        //   await tx.wait();\r\n        //   if (!unmounted) {\r\n        //     setAmount(0);\r\n        //     setToken('');\r\n        //     enqueueSnackbar('Locked successufully!', {\r\n        //       variant: 'success'\r\n        //     });\r\n        //     setProcessing(false);\r\n        //   }\r\n        // } catch (err) {\r\n        //   if (!unmounted) {\r\n        //     setTokenError('Failed in Locking!');\r\n        //     setProcessing(false);\r\n        //   }\r\n        //   return;\r\n        // }\r\n\r\n        //Deploy staking contract\r\n        var poolAddress;\r\n        try {\r\n          const bytecode = STAKE_CONTRACT_BYTECODE.object;\r\n          const factory = new ethers.ContractFactory(STAKE_CONTRACT_ABI, bytecode, signer);\r\n          const contract = await factory.deploy(token, token, rewardRate, lockingdays, MAIN_WALLET);\r\n          console.log(contract.address);\r\n          poolAddress = contract.address;\r\n          await contract.deployTransaction.wait();\r\n          console.log('staking pool is created.... waiting transfer')\r\n\r\n          const tx = await tokenContract.transfer(poolAddress, parseUnits(String(amount), tokenInfo.decimals));\r\n          await tx.wait();\r\n\r\n          if (!unmounted) {\r\n            setAmount(0);\r\n            setToken('');\r\n            setProcessing(false);\r\n          }\r\n          navigate(`/staking`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          if (!unmounted) {\r\n            setTokenError('Failed!');\r\n            setProcessing(false);\r\n          }\r\n          return;\r\n        }\r\n\r\n        //save db\r\n        try {\r\n          console.log('saving to database')\r\n          const response = await axios.post(`/api/bsc/stake`, {\r\n            address: poolAddress,\r\n            owner: account,\r\n            tokenAddress: token,\r\n            tokenName: tokenInfo.name,\r\n            tokenSymbol: tokenInfo.symbol,\r\n            tokenAddress: token,\r\n            rewardRate: rewardRate,\r\n            logo: logo,\r\n            lockingdays: lockingdays,\r\n            tvl: amount,\r\n            startAt: date\r\n          });\r\n          if (response.data) {\r\n            let message = response.data.message;\r\n            enqueueSnackbar('success', {\r\n              variant: 'success'\r\n            });\r\n          } else {\r\n            enqueueSnackbar('failed', {\r\n              variant: 'danger'\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          enqueueSnackbar('Oops, Something went wrong!', {\r\n            variant: 'error'\r\n          });\r\n        }\r\n      }\r\n    })();\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Create Stake\">\r\n      <Container maxWidth=\"lg\" className=\"pt-5\">\r\n        {/* For test */}\r\n        {/* <h6>Network: {network}, Account: {account}, Token: {token}</h6>  */}\r\n\r\n        <Card\r\n          sx={{\r\n            width: 1,\r\n            p: 3,\r\n            transition: 'all .3s',\r\n            cursor: 'pointer',\r\n            '&:hover': {\r\n              boxShadow: (theme) => theme.customShadows.z24\r\n            }\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\">Create Your STAKING POOL</Typography>\r\n          <Divider />\r\n          <Stack sx={{ mt: 2 }} spacing={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Token Address\"\r\n              type=\"text\"\r\n              error={Boolean(tokenError)}\r\n              helperText={tokenError}\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n              sx={{\r\n                width: 1\r\n              }}\r\n            />\r\n            {isParsing == true ? (\r\n              // <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={30} width={30} />\r\n              <HashLoader color=\"#02FF7B\" size={30} />\r\n            ) : tokenInfo.name != '' ? (\r\n              <Stack sx={{ marginTop: '30px', padding: '0 20px' }}>\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Name</span>\r\n                  <span>{tokenInfo.name}</span>\r\n                </Stack>\r\n                <Divider sx={{ my: 1.5, borderColor: 'rgba(255, 255, 255, 0.3)' }} />\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Symbol</span>\r\n                  <span>{tokenInfo.symbol}</span>\r\n                </Stack>\r\n                <Divider sx={{ my: 1.5, borderColor: 'rgba(255, 255, 255, 0.3)' }} />\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Total Supply</span>\r\n                  <span>{commify(formatUnits(tokenInfo.totalSupply, tokenInfo.decimals))}</span>\r\n                </Stack>\r\n                <Divider sx={{ my: 1.5, borderColor: 'rgba(255, 255, 255, 0.3)' }} />\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Decimals</span>\r\n                  <span>{tokenInfo.decimals}</span>\r\n                </Stack>\r\n                <Divider sx={{ my: 1.5, borderColor: 'rgba(255, 255, 255, 0.3)' }} />\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Balance</span>\r\n                  <span>{commify(formatUnits(tokenInfo.balanceOf, tokenInfo.decimals))}</span>\r\n                </Stack>\r\n              </Stack>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <TextField\r\n              fullWidth\r\n              label=\"Amount(You will send this amount to staking contract for rewards to users.)\"\r\n              type=\"number\"\r\n              error={Boolean(amountError)}\r\n              helperText={amountError}\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              sx={{\r\n                width: 1\r\n              }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Token Logo URL\"\r\n              value={logo}\r\n              onChange={(e) => setLogo(e.target.value)}\r\n              sx={{\r\n                width: 1\r\n              }}\r\n              placeholder=\"https://tokenlogo.url\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Locked Duration(days)\"\r\n              value={lockingdays}\r\n              onChange={(e) => setLockingDays(e.target.value)}\r\n              sx={{\r\n                width: 1\r\n              }}\r\n              placeholder=\"https://tokenlogo.url\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Reward Rate\"\r\n              type=\"number\"\r\n              // error={Boolean(amountError)}\r\n              // helperText={amountError}\r\n              value={rewardRate}\r\n              onChange={(e) => setRewardRate(e.target.value)}\r\n              sx={{\r\n                width: 1\r\n              }}\r\n            />\r\n            <DateTimePicker\r\n              renderInput={(props) => <TextField sx={{ width: 1 }} {...props} />}\r\n              label=\"Lock Until:\"\r\n              value={date}\r\n              onChange={(newValue) => {\r\n                setDate(newValue);\r\n              }}\r\n            />\r\n          </Stack>\r\n          <Stack sx={{ mt: 2 }} alignItems=\"center\" spacing={1}>\r\n            <Button size=\"large\" variant=\"contained\" className=\"btn btn-info text-light mt-2 mx-4\" onClick={handleCreate}>\r\n              {processing ? <HashLoader color=\"#02FF7B\" size={30} /> : 'Create Pool'}\r\n            </Button>\r\n          </Stack>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["warnedOnce","React","console","warn","join","styled","Typography","_ref","theme","_objectSpread","typography","subtitle2","height","color","overflow","WebkitLineClamp","display","WebkitBoxOrient","CreateStake","navigate","useNavigate","_useActiveWeb3React","useActiveWeb3React","library","account","signer","getSigner","_useState","useSelector","state","network","chainId","useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","tokenError","setTokenError","_useState5","_useState6","logo","setLogo","_useState7","_useState8","lockingdays","setLockingDays","_useState9","_useState10","rewardRate","setRewardRate","_useState11","_useState12","amount","setAmount","_useState13","_useState14","amountError","setAmountError","_useState15","Date","now","_useState16","date","setDate","tokenContract","useTokenContract","_useState17","_useState18","isParsing","setIsParsing","_useState19","_useState20","processing","setProcessing","enqueueSnackbar","useSnackbar","_useState21","useLockContract","name","symbol","decimals","totalSupply","balanceOf","_useState22","tokenInfo","setTokenInfo","useEffect","unmounted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","t0","log","stop","handleCreate","_ref3","_callee3","_context3","_callee2","poolAddress","bytecode","factory","contract","tx","_axios$post","response","_context2","token0","lt","parseUnits","String","abrupt","t1","STAKE_CONTRACT_BYTECODE","ethers","STAKE_CONTRACT_ABI","deploy","MAIN_WALLET","address","deployTransaction","wait","transfer","t2","axios","owner","tokenAddress","tokenName","tokenSymbol","_defineProperty","data","message","variant","t3","apply","arguments","_jsx","Page","title","children","Container","maxWidth","className","_jsxs","Card","sx","width","p","transition","cursor","boxShadow","customShadows","z24","Divider","Stack","mt","spacing","TextField","fullWidth","label","type","error","Boolean","helperText","value","onChange","e","target","HashLoader","size","marginTop","padding","direction","justifyContent","my","borderColor","commify","formatUnits","placeholder","DateTimePicker","renderInput","props","newValue","alignItems","Button","onClick"],"sourceRoot":""}