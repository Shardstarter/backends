{"version":3,"file":"static/js/849.bae71a36.chunk.js","mappings":"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","sources":["pages/AdminPresales.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setAddress, setError, setParsed, setApproved, setAllowance, setTotalSupply } from \"../redux/slices/tokenListing\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik, Form, FormikProvider } from \"formik\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  Stack,\r\n  Typography, Divider,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Checkbox,\r\n  FormControlLabel, Stepper, Step, StepLabel, FormControl, InputLabel\r\n} from \"@mui/material\";\r\nimport MainInfo from './create/MainInfo';\r\nimport AdditionalInfo from './create/AdditionalInfo';\r\nimport FinishStep from './create/FinishStep';\r\nimport { useNavigate } from \"react-router\";\r\nimport { useTokenContract } from \"../hooks/useContract\";\r\nimport { IDO_ADDRESS } from '../config/constants';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { BigNumber } from \"ethers\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useIDOContract } from \"hooks/useContract\";\r\nimport { parseEther, formatEther } from \"@ethersproject/units\";\r\n\r\nfunction AdminPresales() {\r\n  const { account } = useWeb3React();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const network = useSelector((state) => state.network.chainId);\r\n  const [poolFixedFee, setPoolFixedFee] = useState([-1, -1, -1, -1]);\r\n\r\n\r\n  const [percentFee, setPercentFee] = useState(0);\r\n  const [tokenPercentFee, setTokenPercentFee] = useState(0);\r\n  const idoContract = useIDOContract();\r\n\r\n  const [isFeeing, setIsFeeing] = useState(false);\r\n  const setAdminFee = async () => {\r\n    if (!isFeeing) {\r\n      setIsFeeing(true);\r\n      try {\r\n        const tx = await idoContract.setAdminFee([parseEther(String(poolFixedFee[0])),\r\n        parseEther(String(poolFixedFee[1])),\r\n        parseEther(String(poolFixedFee[2])),\r\n        parseEther(String(poolFixedFee[3]))],\r\n          percentFee, tokenPercentFee);\r\n\r\n        await tx.wait();\r\n        enqueueSnackbar(\"Succeed in setting fee!\", {\r\n          variant: \"success\",\r\n        });\r\n        setIsFeeing(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        enqueueSnackbar(\"Failed in setting fee!\", {\r\n          variant: \"error\",\r\n        });\r\n        setIsFeeing(false);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    (async () => {\r\n      try {\r\n        const tmp = [];\r\n        for (let i = 0; i < 4; i++)\r\n          tmp.push(await idoContract.poolFixedFee(i));\r\n\r\n        const poolPercentFee = await idoContract.poolPercentFee();\r\n        const poolTokenPercentFee = await idoContract.poolTokenPercentFee();\r\n        if (!unmounted) {\r\n          setPoolFixedFee([formatEther(tmp[0]),\r\n          formatEther(tmp[1]),\r\n          formatEther(tmp[2]),\r\n          formatEther(tmp[3])]);\r\n\r\n          setPercentFee(poolPercentFee);\r\n          setTokenPercentFee(poolTokenPercentFee);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n    return () => { unmounted = true };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mt: 5 }}>\r\n          {\r\n            poolFixedFee[0] == -1 ? (\r\n              <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#00BFFF\"\r\n                height={50}\r\n                width={50}\r\n              />\r\n            ) : (\r\n              <Paper\r\n                sx={{\r\n                  p: 10,\r\n                  mx: \"auto\",\r\n                  background: \"rgba(255, 255, 255, 0.2)\",\r\n                  backdropFilter: \"blur(6px)\",\r\n                }}\r\n              >\r\n                <Stack >\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Common Fixed Fee\"\r\n                    value={poolFixedFee[0]}\r\n                    onChange={(e) => {\r\n                      const tmp = JSON.parse(JSON.stringify(poolFixedFee));\r\n                      tmp[0] = e.target.value;\r\n                      setPoolFixedFee(tmp)\r\n                    }}\r\n                    sx={{\r\n                      width: 1,\r\n                      color: \"white\",\r\n                      \"& .MuiInputLabel-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n                <Stack marginTop=\"20px\" >\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Gold Fixed Fee\"\r\n                    value={poolFixedFee[1]}\r\n                    onChange={(e) => {\r\n                      const tmp = JSON.parse(JSON.stringify(poolFixedFee));\r\n                      tmp[1] = e.target.value;\r\n                      setPoolFixedFee(tmp)\r\n                    }}\r\n                    sx={{\r\n                      width: 1,\r\n                      color: \"white\",\r\n                      \"& .MuiInputLabel-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n                <Stack marginTop=\"20px\" >\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Platinum Fixed Fee\"\r\n                    value={poolFixedFee[2]}\r\n                    onChange={(e) => {\r\n                      const tmp = JSON.parse(JSON.stringify(poolFixedFee));\r\n                      tmp[2] = e.target.value;\r\n                      setPoolFixedFee(tmp)\r\n                    }}\r\n                    sx={{\r\n                      width: 1,\r\n                      color: \"white\",\r\n                      \"& .MuiInputLabel-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n                <Stack marginTop=\"20px\" >\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Diamond Fixed Fee\"\r\n                    value={poolFixedFee[3]}\r\n                    onChange={(e) => {\r\n                      const tmp = JSON.parse(JSON.stringify(poolFixedFee));\r\n                      tmp[3] = e.target.value;\r\n                      setPoolFixedFee(tmp)\r\n                    }}\r\n                    sx={{\r\n                      width: 1,\r\n                      color: \"white\",\r\n                      \"& .MuiInputLabel-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n                <Stack marginTop=\"20px\" >\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Percent Fee\"\r\n                    type=\"number\"\r\n                    value={percentFee}\r\n                    onChange={(e) => setPercentFee(e.target.value)}\r\n                    sx={{\r\n                      width: 1,\r\n                      color: \"white\",\r\n                      \"& .MuiInputLabel-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n                <Stack marginTop=\"20px\" >\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Token Percent Fee\"\r\n                    type=\"number\"\r\n                    value={tokenPercentFee}\r\n                    onChange={(e) => setTokenPercentFee(e.target.value)}\r\n                    sx={{\r\n                      width: 1,\r\n                      color: \"white\",\r\n                      \"& .MuiInputLabel-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-root\": { color: \"white\" },\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n                <Stack marginTop=\"20px\" >\r\n\r\n                  {\r\n                    !isFeeing ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ height: \"40px\", marginRight: '20px' }}\r\n                        onClick={setAdminFee}\r\n                      >\r\n                        Set Fee\r\n                      </Button>\r\n                    ) : (\r\n                      <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"#00BFFF\"\r\n                        height={30}\r\n                        width={30}\r\n                      />\r\n                    )\r\n                  }\r\n\r\n                </Stack>\r\n              </Paper>\r\n            )\r\n          }\r\n\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminPresales;\r\n"],"names":["useWeb3React","account","enqueueSnackbar","useSnackbar","_useState","useSelector","state","network","chainId","useState","_useState2","_slicedToArray","poolFixedFee","setPoolFixedFee","_useState3","_useState4","percentFee","setPercentFee","_useState5","_useState6","tokenPercentFee","setTokenPercentFee","idoContract","useIDOContract","_useState7","_useState8","isFeeing","setIsFeeing","setAdminFee","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tx","wrap","_context","prev","next","parseEther","String","sent","wait","variant","t0","console","log","stop","apply","arguments","useEffect","unmounted","_callee2","tmp","i","poolPercentFee","poolTokenPercentFee","_context2","t1","push","call","formatEther","t2","_jsx","_Fragment","children","Container","maxWidth","Box","sx","mt","Loader","type","color","height","width","_jsxs","Paper","p","mx","background","backdropFilter","Stack","TextField","fullWidth","label","value","onChange","e","JSON","parse","stringify","target","borderColor","marginTop","Button","style","marginRight","onClick"],"sourceRoot":""}